(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{483:function(s,t,a){"use strict";a.r(t);var r=a(7),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"a-q-mysql联合索引在b-数的存储结构和最左匹配原则原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-q-mysql联合索引在b-数的存储结构和最左匹配原则原理"}},[s._v("#")]),s._v(" A&Q MySQL联合索引在B+数的存储结构和最左匹配原则原理")]),s._v(" "),t("p",[s._v("联合索引也是MySQL一个很常见的索引，有时候我们在 where 后面加了很多条件，合理使用联合索引可以提升我们的SQL执行效率。")]),s._v(" "),t("p",[s._v("而且联合索引还有一个最左匹配原则，概念相信大家都知道，但是原理是什么呢？")]),s._v(" "),t("p",[s._v("还是以Innodb为例子。")]),s._v(" "),t("p",[s._v("MySQL把 B+Tree作为索引底层数据结构，联合索引也是一样，它也是 "),t("strong",[s._v("B+Tree")]),s._v(" 的结构。")]),s._v(" "),t("p",[s._v("唯一索引、普通索引 在innodb上的实现也差不多，而联合索引的实现和普通索引的实现其实是一样的。")]),s._v(" "),t("p",[s._v("参考："),t("RouterLink",{attrs:{to:"/01.LearnJavaToFindAJob/03.【中级】12k-26k档/MySQL/articles\\MySQL\\Innodb和MyISAM索引的区别.html"}},[s._v("Innodb和MyISAM索引的区别（B树、B+树、聚簇索引、非聚簇索引）？")])],1),s._v(" "),t("p",[s._v("假设 有表：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210701/image-20210727165810144.png",alt:""}})]),s._v(" "),t("p",[s._v("表T1有字段a,b,c,d,e，其中a是主键，并创建了一个联合索引idx_t1_bcd(b,c,d)，然后b、c、d三列作为联合索引，在B+树上的结构正如上图所示。")]),s._v(" "),t("blockquote",[t("p",[s._v("联合索引（b，c，d）生成一个索引树，同样是B+树的结构，首先我们创建的"),t("code",[s._v("index_bcd(b,c,d)")]),s._v("索引，相当于创建了(b)、（b、c）（b、c、d）三个索引。")])]),s._v(" "),t("p",[s._v("非叶子节点，上面两行，以第二行为例，b、c、d 组成的联合索引就是在B+树的结构，特点有：")]),s._v(" "),t("ul",[t("li",[s._v("按顺序排列，按 b 排序：1、2、2、3、3、4、6、8")]),s._v(" "),t("li",[s._v("如果字段 b 相等，再按字段 c 排序")])]),s._v(" "),t("p",[s._v("所以到这里，你大概可以知道 "),t("strong",[s._v("最左匹配原则")]),s._v(" 的原理了。")]),s._v(" "),t("p",[t("strong",[s._v("最左匹配原则")]),s._v(" 它是依赖于联合索引的存储结构的，只有在匹配了最左边的索引 b ，才能知道这一行数据的位置。")]),s._v(" "),t("p",[s._v("比如说上面图片：")]),s._v(" "),t("ul",[t("li",[s._v("where b =1 ; 可以很容易知道它在第一个位置（它是有序的）")]),s._v(" "),t("li",[s._v("where c =2 ; 则可以找到两行，（2，2，2）和（3，2，2），这样在整体看来，是无序的，因为 c =2 ，它可以出现在节点的任何一个位置。"),t("strong",[s._v("所以这也是为什么最左匹配原则失效的原因。")])])]),s._v(" "),t("p",[s._v("列举一些SQL的索引使用情况：")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 全值索引匹配 三列都用到")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'d'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 应用到两列索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'d'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 应用到一列索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'d'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 应用到b、c两列列索引及索引条件下推优化")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 应用到一列索引  因为不能跨列使用索引 没有c列 连不上")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" T1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 无法应用索引，违背最左匹配原则")]),s._v("\n")])])]),t("hr"),s._v(" "),t("p",[s._v("参考：")]),s._v(" "),t("ul",[t("li",[s._v("https://juejin.cn/post/6844904073955639304")])])])}),[],!1,null,null,null);t.default=e.exports}}]);