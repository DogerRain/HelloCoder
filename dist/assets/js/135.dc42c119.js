(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{538:function(v,_,e){"use strict";e.r(_);var t=e(7),n=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("来源：https://mp.weixin.qq.com/s/c01E7NJv9MLIGkS5PdmLUg\n作者：占小狼")])]),v._v(" "),_("p",[v._v("从一个文件中读出数据并将数据传到另一台服务器上：")]),v._v(" "),_("p",[v._v("伪代码如下：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("File.read(file, buf, len);\nSocket.send(socket, buf, len);\n")])])]),_("p",[v._v("这种方式一共涉及了4次数据拷贝：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210412163731811.png",alt:""}})]),v._v(" "),_("p",[v._v("1、应用程序中调用 "),_("code",[v._v("read()")]),v._v(" 方法，这里会涉及到一次上下文切换（用户态->内核态），底层采用DMA（direct memory access）读取磁盘的文件，并把内容存储到内核地址空间的读取缓存区。")]),v._v(" "),_("p",[v._v("2、由于应用程序无法访问内核地址空间的数据，如果应用程序要操作这些数据，得把这些内容从读取缓冲区拷贝到用户缓冲区。 "),_("code",[v._v("read()")]),v._v(" 调用的返回引发一次上下文切换（内核态->用户态），现在数据已经被拷贝到了用户地址空间缓冲区，如果有需要，可以操作修改这些内容。")]),v._v(" "),_("p",[v._v("3、我们最终目的是把这个文件内容通过Socket传到另一个服务中，调用Socket的 "),_("code",[v._v("send()")]),v._v("方法，又涉及到一次上下文切换（用户态->内核态），同时，文件内容被进行第三次拷贝，这次的缓冲区与目标套接字相关联，与读取缓冲区无关。")]),v._v(" "),_("blockquote",[_("p",[v._v("这里相当于程序把接收的数据写到缓冲区")])]),v._v(" "),_("p",[v._v("4、 "),_("code",[v._v("send()")]),v._v("调用返回，引发第四次的上下文切换，同时进行第四次拷贝，DMA把数据从目标套接字相关的缓存区传到协议引擎进行发送。")]),v._v(" "),_("p",[v._v('"'),_("strong",[v._v("整个过程中，过程1和4是由DMA负责，并不会消耗CPU，只有过程2和3的拷贝需要CPU参与")]),v._v('"')]),v._v(" "),_("p",[v._v("以上过程中好几次的拷贝都是多余的，十分影响性能。")]),v._v(" "),_("p",[v._v("于是，"),_("strong",[v._v("零拷贝")]),v._v("出现。")]),v._v(" "),_("p",[v._v("直接把内核态读取缓存冲区数据直接拷贝到套接字相关的缓存区：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210412164229324.png",alt:""}})]),v._v(" "),_("p",[v._v("这样改进之后，其优点是：")]),v._v(" "),_("ul",[_("li",[v._v("拷贝次数从四次减少到了三次（其中DMA copy 2次，CPU copy 1次）。")]),v._v(" "),_("li",[v._v("上下文切换的次数从四次减少到了两次")])]),v._v(" "),_("p",[v._v("如何实现：")]),v._v(" "),_("p",[v._v("在Java中，FileChannel的transferTo() 方法可以实现这个过程，该方法将数据从文件通道传输到给定的可写字节通道， 上面的 "),_("code",[v._v("file.read()")]),v._v("和 "),_("code",[v._v("socket.send()")]),v._v(" 调用动作可以替换为 "),_("code",[v._v("transferTo()")]),v._v(" 调用")]),v._v(" "),_("p",[v._v("其中还需要一次的CPU参与，其实"),_("strong",[v._v("零拷贝")]),v._v("还可以进行优化。")]),v._v(" "),_("p",[v._v("如果底层网络接口卡支持收集操作的话，就可以进一步的优化：")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210412164825693.png",alt:""}})]),v._v(" "),_("p",[v._v("具体过程：")]),v._v(" "),_("p",[v._v("1、transferTo() 方法使用 DMA 将文件内容拷贝到内核读取缓冲区。")]),v._v(" "),_("p",[v._v("2、避免了内容的整体拷贝，只把包含数据位置和长度信息的描述符追加到套接字缓冲区，DMA 引擎直接把数据从内核缓冲区传到协议引擎，从而消除了最后一次 CPU参与的拷贝动作。")])])}),[],!1,null,null,null);_.default=n.exports}}]);