(window.webpackJsonp=window.webpackJsonp||[]).push([[256],{660:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("几乎所有的项目部署，都会用到Nginx。")]),t._v(" "),s("p",[t._v("主要用到Nginx的功能有如下：")]),t._v(" "),s("ul",[s("li",[t._v("正向、反向代理")]),t._v(" "),s("li",[t._v("过滤IP")]),t._v(" "),s("li",[t._v("负载均衡")])]),t._v(" "),s("p",[t._v("这三个功能是大部分公司的线上项目部署用到的，掌握Nginx并不难，主要是学会配置"),s("code",[t._v("nginx.conf")]),t._v(" 文件，这个文件是用到了一些Nginx的语法，会用简单，但是用好却很难。")]),t._v(" "),s("p",[t._v("下面来简单介绍一下Nginx。")]),t._v(" "),s("h2",{attrs:{id:"_1、nginx介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、nginx介绍"}},[t._v("#")]),t._v(" 1、Nginx介绍")]),t._v(" "),s("p",[t._v("Nginx下载地址："),s("a",{attrs:{href:"http://nginx.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Nginx 是开源、高性能、高可靠的 Web 和反向代理服务器，而且支持热部署，几乎可以做到 7 * 24 小时不间断运行，即使运行几个月也不需要重新启动，还能在不间断服务的情况下对软件版本进行热更新。")]),t._v(" "),s("p",[t._v("如果你是前端，相信你用过Node作为服务器。")]),t._v(" "),s("p",[t._v("如果你是后端，相信你用过Tomcat作为服务器。")]),t._v(" "),s("p",[t._v("Nginx也作为一个轻量级的服务器，其功能与Node、Tomcat是不冲突的。")]),t._v(" "),s("p",[t._v("Nginx的优势就是其性能，其占用内存少、并发能力强、能支持高达 5w 个并发连接数。")]),t._v(" "),s("p",[t._v("所以Nginx一般被用来当做服务器的第一道门，其应用场景有：")]),t._v(" "),s("ul",[s("li",[t._v("正向、反向代理")]),t._v(" "),s("li",[t._v("过滤IP，白名单")]),t._v(" "),s("li",[t._v("负载均衡")]),t._v(" "),s("li",[t._v("静态资源服务")])]),t._v(" "),s("h2",{attrs:{id:"_2、nginx的一些概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、nginx的一些概念"}},[t._v("#")]),t._v(" 2、Nginx的一些概念")]),t._v(" "),s("p",[t._v("在学习Nginx之前，先要了解一下下面几个概念，做简单了解即可。")]),t._v(" "),s("h3",{attrs:{id:"_2-1、cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、cors"}},[t._v("#")]),t._v(" 2.1、CORS")]),t._v(" "),s("p",[t._v('CORS是一个W3C标准，全称是"跨域资源共享"（Cross-origin resource sharing），也就是我们常说的'),s("strong",[t._v("跨域")]),t._v("。")]),t._v(" "),s("p",[t._v("在浏览器上当前访问的网站向另一个网站发送请求获取数据的过程就是"),s("strong",[t._v("跨域请求")]),t._v("。因为浏览器有安全策略，不然随便访问其他网站资源很可能会造成安全隐患，而CORS就可以打破这个限制。")]),t._v(" "),s("p",[t._v("它允许浏览器向跨源服务器发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。")]),t._v(" "),s("p",[t._v("CORS需要浏览器和服务器同时支持。目前，所有浏览器都支持该功能，IE浏览器不能低于IE10。")]),t._v(" "),s("p",[t._v("整个CORS通信过程，都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。")]),t._v(" "),s("p",[t._v("浏览器将CORS请求分成两类："),s("code",[t._v("简单请求（simple request）")]),t._v("和"),s("code",[t._v("非简单请求（not-so-simple request")]),t._v("）。")]),t._v(" "),s("blockquote",[s("p",[t._v("简单的说，浏览器在发送跨域请求的时候，会先判断下是简单请求还是非简单请求，如果是简单请求，就先执行服务端程序，然后浏览器才会判断是否跨域。")])]),t._v(" "),s("p",[t._v("以下是一些跨域的例子：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不同源的例子")]),t._v("\nhttp://example.com/app1   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 协议不同")]),t._v("\nhttps://example.com/app2\n\nhttp://example.com        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# host 不同")]),t._v("\nhttp://www.example.com\nhttp://myapp.example.com\n\nhttp://example.com        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 端口不同")]),t._v("\nhttp://example.com:8080\n")])])]),s("h3",{attrs:{id:"_2-2、两种请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、两种请求"}},[t._v("#")]),t._v(" 2.2、两种请求")]),t._v(" "),s("h4",{attrs:{id:"_2-2-1、简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1、简单请求"}},[t._v("#")]),t._v(" 2.2.1、简单请求")]),t._v(" "),s("ol",[s("li",[t._v("请求方法是 "),s("code",[t._v("HEAD")]),t._v("、"),s("code",[t._v("GET")]),t._v("、"),s("code",[t._v("POST")]),t._v(" 三种之一；")]),t._v(" "),s("li",[t._v("HTTP 头信息不超过这几个字段："),s("code",[t._v("Accept")]),t._v("、"),s("code",[t._v("Accept-Language")]),t._v("、"),s("code",[t._v("Content-Language")]),t._v("、"),s("code",[t._v("Last-Event-ID")]),t._v(" "),s("code",[t._v("Content-Type")])]),t._v(" "),s("li",[t._v("而且"),s("code",[t._v("Content-Type")]),t._v(" 只限于三个值 "),s("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),s("code",[t._v("multipart/form-data")]),t._v("、"),s("code",[t._v("text/plain")]),t._v("；")])]),t._v(" "),s("p",[t._v("如果"),s("strong",[t._v("同时满足上面三个条件")]),t._v("的，就属于"),s("strong",[t._v("简单请求")]),t._v("。")]),t._v(" "),s("p",[t._v("凡是"),s("strong",[t._v("不同时满足上面三个条件")]),t._v("的，就属于"),s("strong",[t._v("非简单请求")]),t._v("。")]),t._v(" "),s("p",[t._v("对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息之中，增加一个"),s("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),s("p",[t._v("✈️")]),t._v(" "),s("p",[t._v("下面是一个例子，浏览器发现这次跨源AJAX请求是简单请求，就自动在头信息之中，添加一个"),s("code",[t._v("Origin")]),t._v("字段。")]),t._v(" "),s("blockquote",[s("p",[t._v("GET /cors HTTP/1.1\nOrigin: http://rain.baimuxym.cn\nHost: api.alice.com\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0…")])]),t._v(" "),s("p",[t._v("上面的头信息中，"),s("code",[t._v("Origin")]),t._v("字段用来说明，本次请求来自哪个源（协议 + 域名 + 端口）。服务器根据这个值，决定是否同意这次请求，Host是目前的域名。")]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("Origin")]),t._v("指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现，这个回应的头信息没有包含"),s("code",[t._v("Access-Control-Allow-Origin")]),t._v("字段（详见下文），就知道出错了，从而抛出一个错误，被"),s("code",[t._v("XMLHttpRequest")]),t._v("的"),s("code",[t._v("onerror")]),t._v("回调函数捕获。注意，这种错误无法通过状态码识别，因为HTTP回应的状态码有可能是200。")]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("Origin")]),t._v("指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。")]),t._v(" "),s("blockquote",[s("p",[t._v("Access-Control-Allow-Origin: http://rain.baimuxym.cn\nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: FooBar\nContent-Type: text/html; charset=utf-8")])]),t._v(" "),s("h4",{attrs:{id:"_2-2-2、非简单请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2、非简单请求"}},[t._v("#")]),t._v(" 2.2.2、非简单请求")]),t._v(" "),s("p",[t._v("常见的"),s("strong",[t._v("非简单请求")]),t._v("有：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("put，delete 方法的ajax请求")])]),t._v(" "),s("li",[s("p",[t._v("发送json格式的ajax请求，"),s("code",[t._v("Content-Type")]),t._v(" 值为 "),s("code",[t._v("application/json")])])]),t._v(" "),s("li",[s("p",[t._v("带自定义头的ajax请求")])])]),t._v(" "),s("p",[t._v("非简单请求的CORS请求，会在正式通信之前，"),s("strong",[t._v('增加一次HTTP查询请求，称为"预检"请求（preflight）')]),t._v("，浏览器发送一次 HTTP 预检 "),s("code",[t._v("OPTIONS")]),t._v("请求，先询问服务器，当前网页所在的"),s("strong",[t._v("域名是否在服务器的许可名单之中")]),t._v("，以及可以使用哪些 HTTP 请求方法和头信息字段。")]),t._v(" "),s("p",[t._v('下面是这个"预检"请求的HTTP头信息。')]),t._v(" "),s("blockquote",[s("p",[t._v("OPTIONS /cors HTTP/1.1\nOrigin: http://rain.baimuxym.cn\nAccess-Control-Request-Method: PUT\nAccess-Control-Request-Headers: X-Custom-Header\nHost: api.alice.com\nAccept-Language: en-US\nConnection: keep-alive\nUser-Agent: Mozilla/5.0…")])]),t._v(" "),s("p",[t._v('"预检"请求用的请求方法是'),s("code",[t._v("OPTIONS")]),t._v("，表示这个请求是用来询问的。头信息里面，关键字段是"),s("code",[t._v("Origin")]),t._v("，表示请求来自哪个源。")]),t._v(" "),s("p",[t._v('服务器收到"预检"请求以后，检查了'),s("code",[t._v("Origin")]),t._v("、"),s("code",[t._v("Access-Control-Request-Method")]),t._v("和"),s("code",[t._v("Access-Control-Request-Headers")]),t._v("字段以后，确认允许跨源请求，就可以做出回应。")]),t._v(" "),s("p",[t._v("只有得到肯定答复，浏览器才会发出正式的 "),s("code",[t._v("XHR")]),t._v(" 请求，否则报错。")]),t._v(" "),s("p",[t._v("以上简单介绍了一下跨域的原理，其实跨域的解决方法在前端和后端都可以配置，方法也很多，这里就不展开讲了。")]),t._v(" "),s("h3",{attrs:{id:"_2-3、正向代理和反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、正向代理和反向代理"}},[t._v("#")]),t._v(" 2.3、正向代理和反向代理")]),t._v(" "),s("p",[s("strong",[t._v("正向代理")]),t._v("是一个位于客户端和原始服务器之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定原始服务器，然后代理向原始服务器转交请求并将获得的内容返回给客户端。代理服务器和客户端处于同一个局域网内。")]),t._v(" "),s("p",[t._v("比如说 你要访问 pornhub，你的浏览器是无法直接的，于是我就通过代理服务器（fanqiang）让它帮我转发，这种方式是客户端指定请求URL的。")]),t._v(" "),s("blockquote",[s("p",[t._v('"喂？是代理服务器吗，帮我访问一下 www.pornhub.com"，正向代理的工作原理就像一个跳板。')])]),t._v(" "),s("p",[s("strong",[t._v("反向代理")]),t._v("实际运行方式是代理服务器接受网络上的连接请求。它将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给网络上请求连接的客户端 。")]),t._v(" "),s("p",[t._v("代理服务器和原始服务器处于同一个局域网内。反向代理隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。一般在处理跨域请求的时候比较常用。")]),t._v(" "),s("p",[t._v("比如说我要访问 https://rain.baimuxym.cn/images.jpg，对我来说不知道图片是不是同一个服务器返回回来的，甚至这个图片根本不在这台服务器，图片可以是服务器偷偷从其他 服务器，比如从 https://images.baimuxym.cn 拿回来的，但是用户并不知情。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img/image-20201028150646664.png",alt:" "}})]),t._v(" "),s("p",[s("strong",[t._v("代理的好处：")])]),t._v(" "),s("ul",[s("li",[t._v("保护了真实的web服务器，保证了web服务器的资源安全")])]),t._v(" "),s("p",[t._v("只用于代理内部网络对Internet外部网络的连接请求，不支持外部网络对内部网络的连接请求，因为内部网络对外部网络是不可见的。所有的静态网页或者CGI程序，都保存在内部的Web服务器上。因此对反向代理服务器的攻击并不会使得网页信息遭到破坏，这样就增强了Web服务器的安全性。")]),t._v(" "),s("ul",[s("li",[t._v("节约了有限的IP地址资源")])]),t._v(" "),s("p",[t._v("共享一个在internet中注册的IP地址（内网局域网），这些服务器分配私有地址，采用虚拟主机的方式对外提供服务。")]),t._v(" "),s("ul",[s("li",[t._v("减少WEB服务器压力，提高响应速度")])]),t._v(" "),s("p",[t._v("负载的实现方式之一，不同的资源可以放在不同的服务器。（下面提到的负载均衡、动静分离也是通过反向代理实现的）")]),t._v(" "),s("h3",{attrs:{id:"_2-4、负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4、负载均衡"}},[t._v("#")]),t._v(" 2.4、负载均衡")]),t._v(" "),s("p",[t._v("随着业务的发展，单个机器性能有限，无法承受巨大的请求压力，这个时候集群的概念产生了，将请求分发到各个服务器上（每台服务器的代码都是一样的），将负载分发到不同的服务器，这就是"),s("strong",[t._v("负载均衡")]),t._v("，核心是「分摊压力」。")]),t._v(" "),s("p",[t._v("如何分发压力？Nginx也可以配置规则，比如说权重、轮询、hash 等等。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210429101548741.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-5、动静分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5、动静分离"}},[t._v("#")]),t._v(" 2.5、动静分离")]),t._v(" "),s("p",[t._v("动静分离的初衷是为了"),s("strong",[t._v("加快网站的访问速度")]),t._v("。像大图片、视频、CSS 这种静态资源，如果都放在同一个服务器，在请求的时候就会造成带宽压力，如果把这些静态资源分散到不同的服务器，配合CDN，就可以减少服务器的压力。")]),t._v(" "),s("p",[t._v("由于 Nginx 的高并发和静态资源缓存等特性，经常将静态资源部署在 Nginx 上。")]),t._v(" "),s("p",[t._v("如果请求的是静态资源，直接到静态资源目录获取资源，如果是动态资源的请求，则利用"),s("strong",[t._v("反向代理")]),t._v("的原理，把请求转发给对应后台应用去处理，从而实现动静分离。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210429101604508.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_3、安装nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、安装nginx"}},[t._v("#")]),t._v(" 3、安装Nginx")]),t._v(" "),s("p",[t._v("Nginx下载地址：https://nginx.org/en/download.html")]),t._v(" "),s("p",[t._v("我这里演示的Linux Centos7的安装，如果你是Windows，那就更简单了，直接解压即可。")]),t._v(" "),s("p",[s("strong",[t._v("1、gcc 安装")])]),t._v(" "),s("p",[t._v("Nginx 是 C语言 开发，安装 Nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc-c++\n")])])]),s("p",[t._v("我这里显示已经是最新了：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install gcc-c++")]),t._v("\nLoaded plugins: fastestmirror, langpacks\nLoading mirror speeds from cached hostfile\nPackage gcc-c++-4.8.5-39.el7.x86_64 already installed and latest version\nNothing to "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n")])])]),s("p",[s("strong",[t._v("2、 PCRE pcre-devel 安装")]),t._v("\nPCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。")]),t._v(" "),s("p",[t._v("nginx也需要此库。命令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y pcre pcre-devel\n")])])]),s("p",[s("strong",[t._v("3、zlib 安装")]),t._v("\nzlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y zlib zlib-devel\n")])])]),s("p",[s("strong",[t._v("4、OpenSSL 安装")]),t._v("\nOpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。\nnginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y openssl openssl-devel\n")])])]),s("p",[s("strong",[t._v("5、Nginx解压")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf nginx-1.15.2.tar.gz -C /var/www/web\n")])])]),s("p",[s("strong",[t._v("6、编译Nginx")])]),t._v(" "),s("p",[t._v("进入Nginx安装目录，输入 "),s("code",[t._v("./configure")]),t._v("，表示使用Nginx的默认配置，开启ssl")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos software"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /var/www/web/nginx-1.15.2/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos nginx-1.15.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意！"),s("code",[t._v("--prefix=/usr/local/nginx")]),t._v(" 的意思是Nginx安装目录，如果不写默认的目录也是这个，如果你自定义，在下一步需要到你自定义的目录执行"),s("code",[t._v("make")]),t._v("和"),s("code",[t._v("make install")])])]),t._v(" "),s("p",[t._v("然后输入：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),s("p",[t._v("编译成功再输入：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),s("p",[t._v("Nginx的默认安装目录是 "),s("code",[t._v("/usr/local/nginx")])]),t._v(" "),s("p",[s("strong",[t._v("7、启动Nginx")])]),t._v(" "),s("p",[t._v("Nginx的默认配置，是指向 "),s("code",[t._v("/usr/local/nginx/sbin/")]),t._v("这个目录的，配置文件是这里 "),s("code",[t._v("/usr/local/nginx/conf")])]),t._v(" "),s("p",[t._v("Nginx常用命令：（需要在安装目录执行，我的是 "),s("code",[t._v("/usr/local/nginx/sbin/")]),t._v(" ）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./nginx  # 启动\n./nginx -s stop #停止\n./nginx -s reload #重启\n")])])]),s("p",[t._v("启动，成功找到Nginx的进程。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos nginx-1.15.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /usr/local/nginx/sbin/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./nginx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ps -aux|grep nginx")]),t._v("\nroot     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11505")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20556")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("616")]),t._v(" ?        Ss   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":00   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":00 nginx: master process ./nginx\nnobody   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11506")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23092")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1384")]),t._v(" ?        S    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":00   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":00 nginx: worker process\nroot     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11545")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112712")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("960")]),t._v(" pts/4    R+   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":00   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto nginx\n")])])]),s("p",[t._v("然后浏览器输入自己的IP，出现"),s("strong",[t._v("Welcome to Nginx")]),t._v(" 就表示成功了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210116125047136.png",alt:""}})]),t._v(" "),s("p",[t._v("为了方便使用，我们把Nginx添加到全局变量：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@VM-8-8-centos sbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ln -s /usr/local/nginx/sbin/nginx /usr/local/bin/")]),t._v("\n")])])]),s("p",[t._v("添加完毕，我们在任何一个目录就可以使用Nginx命令了。")]),t._v(" "),s("p",[t._v("这里要记住的是你的Nginx配置文件"),s("code",[t._v("nginx.conf")]),t._v(" 目录是："),s("code",[t._v("/usr/local/nginx/conf/nginx.conf")])]),t._v(" "),s("h2",{attrs:{id:"_4、nginx常见命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、nginx常见命令"}},[t._v("#")]),t._v(" 4、Nginx常见命令")]),t._v(" "),s("p",[t._v("这里是把Nginx添加到全局变量才能这样操作，否则需要进入到 "),s("code",[t._v("/usr/local/nginx/sbin/")]),t._v(" 目录，windows直接进入安装目录即可。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("帮助命令：nginx -h\n启动Nginx服务器 ： nginx\n查看进程： ps aux | grep nginx\n配置文件路径：/usr/local/nginx/conf/nginx.conf\n检查配置文件： nginx -t\n指定启动配置文件： nginx -c /usr/local/nginx/conf/nginx.conf\n暴力停止服务： nginx -s stop\n优雅停止服务： nginx -s quit\n重新加载配置文件： nginx -s reload\n")])])]),s("h2",{attrs:{id:"_5、nginx的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、nginx的配置"}},[t._v("#")]),t._v(" 5、Nginx的配置")]),t._v(" "),s("h3",{attrs:{id:"_5-1、nginx的构成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、nginx的构成"}},[t._v("#")]),t._v(" 5.1、Nginx的构成")]),t._v(" "),s("p",[t._v("打开"),s("code",[t._v("/usr/local/nginx/conf/nginx.conf")]),t._v(" 文件，windows的配置文件在安装目录的 "),s("code",[t._v("conf/nginx.conf")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("main        # 全局配置，也称为Main块，对全局生效\n├── events  # 配置影响 Nginx 服务器或与用户的网络连接\n├── http    # 配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置\n│   ├── upstream # 配置后端服务器具体地址，负载均衡配置不可或缺的部分\n│   ├── server   # 配置虚拟主机的相关参数，一个 http 块中可以有多个 server 块\n│   ├── server\n│   │   ├── location  # server 块可以包含多个 location 块，location 指令用于匹配 uri \n│   │   ├── location\n│   │   └── ...\n│   └── ...\n└── ...\n")])])]),s("p",[t._v("这个就像是Java的类一样，有公共的，也有私有的，server就像是一个 "),s("code",[t._v("if")]),t._v("  语法块，location又是一个子"),s("code",[t._v("if")]),t._v("语法块，只有匹配到了才会进入最后的URL。")]),t._v(" "),s("p",[t._v("一个 Nginx 配置文件的结构就像 "),s("code",[t._v("nginx.conf")]),t._v(" 显示的那样，配置文件的语法规则：")]),t._v(" "),s("ol",[s("li",[t._v("配置文件由指令与指令块构成；")]),t._v(" "),s("li",[t._v("每条指令以 "),s("code",[t._v(";")]),t._v(" 分号结尾，指令与参数间以空格符号分隔；")]),t._v(" "),s("li",[t._v("指令块以 "),s("code",[t._v("{}")]),t._v(" 大括号将多条指令组织在一起；")]),t._v(" "),s("li",[s("code",[t._v("include")]),t._v(" 语句允许组合多个配置文件以提升可维护性；")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("#")]),t._v(" 符号添加注释，提高可读性；")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("$")]),t._v(" 符号使用变量；")]),t._v(" "),s("li",[t._v("部分指令的参数支持正则表达式；")])]),t._v(" "),s("h3",{attrs:{id:"_5-2、nginx的典型配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、nginx的典型配置"}},[t._v("#")]),t._v(" 5.2、Nginx的典型配置")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#-----------全局块 START-----------")]),t._v("\nuser  nobody"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行用户，默认即是nginx，可以不进行设置")]),t._v("\nworker_processes  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 进程数，一般设置为和 CPU 核数一样")]),t._v("\nworker_processes auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 进程数 与当前 CPU 物理核心数一致")]),t._v("\nerror_log  /var/log/nginx/error.log warn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 的错误日志存放目录，日志级别是warn")]),t._v("\npid        /var/run/nginx.pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx 服务启动时的 pid 存放位置")]),t._v("\nworker_rlimit_nofile "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20480")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以理解成每个 worker 子进程的最大连接数量。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#-----------全局块 END-----------")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#-----------events块 START-----------")]),t._v("\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    accept_mutex on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置网路连接序列化，防止惊群现象发生，默认为on")]),t._v("\n    multi_accept on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置一个进程是否同时接受多个网络连接，默认为off")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 事件驱动模型有 select|poll|kqueue|epoll|resig|/dev/poll|eventport")]),t._v("\n    use epoll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用 epoll的I/O模型，建议使用默认")]),t._v("\n    worker_connections "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个进程允许最大并发数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#-----------events块 END-----------")]),t._v("\n\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置使用最频繁的部分，代理、缓存、日志定义等绝大多数功能和第三方模块的配置都在这里设置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置日志自定义格式")]),t._v("\n    log_format  myFormat  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"$http_user_agent" "$http_x_forwarded_for"\'')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    access_log  /var/log/nginx/access.log  myFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Nginx访问日志存放位置，并采用上面定义好的格式")]),t._v("\n\n    sendfile            on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启高效传输模式")]),t._v("\n    tcp_nopush          on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 减少网络报文段的数量")]),t._v("\n    tcp_nodelay         on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive_timeout   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保持连接的时间，也叫超时时间，单位秒")]),t._v("\n    types_hash_max_size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    include             /etc/nginx/mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件扩展名与类型映射表")]),t._v("\n    default_type        application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认文件类型")]),t._v("\n\n    include /etc/nginx/conf.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用include引入其他子配置项，不存在会报错")]),t._v("\n    \n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        keepalive_requests "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单连接请求上限次数。")]),t._v("\n    \tlisten       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置监听的端口")]),t._v("\n    \tserver_name  localhost "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 baimuxym.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置监听的域名或者地址，可多个，用空格隔开")]),t._v("\n    \t\n    \tlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\troot   /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网站根目录")]),t._v("\n    \t\tindex  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认首页文件")]),t._v("\n    \t\tdeny "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.18")]),t._v(".5.54   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止访问的ip地址，可以为all")]),t._v("\n    \t\tallow "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.18")]),t._v(".5.53"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许访问的ip地址，可以为all")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 图片防盗链")]),t._v("\n         location ~* "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gif"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpeg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("bmp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("swf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            valid_referers none blocked "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只允许本机 IP 外链引用")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$invalid_referer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#新增内容，可以在自己的server单独配置错误日志")]),t._v("\n    \terror_log    logs/error_localhost.log    error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    \terror_page "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认50x对应的访问页面")]),t._v("\n    \terror_page "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" error.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同上")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("特别说明一下：")])]),t._v(" "),s("h4",{attrs:{id:"_1、error-log的默认值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、error-log的默认值"}},[t._v("#")]),t._v(" 1、error_log的默认值")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("error_log logs/error.log error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("error_log的语法格式及参数语法说明如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" error_log  <FILE>  <LEVEL>;\n 关键字     日志文件  错误日志级别\n")])])]),s("p",[t._v("关键字：其中关键字error_log不能改变")]),t._v(" "),s("p",[t._v("日志文件：可以指定任意存放日志的目录")]),t._v(" "),s("p",[t._v("错误日志级别：常见的错误日志级别有"),s("code",[t._v("[debug | info | notice | warn | error | crit | alert | emerg]")]),t._v("，级别越高记录的信息越少。")]),t._v(" "),s("blockquote",[s("p",[t._v("生产场景一般是 warn | error | crit 这三个级别之一")]),t._v(" "),s("p",[t._v("注意：不要配置info等级较低的级别，会带来大量的磁盘I/O消耗。")])]),t._v(" "),s("p",[t._v("error_log参数允许放置的标签段位置：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("main, http, server, location\n")])])]),s("p",[t._v("测试了一下，日志文件不存在，Nginx不会创建，所以要提前手动创建。")]),t._v(" "),s("h4",{attrs:{id:"_2、events-块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、events-块"}},[t._v("#")]),t._v(" 2、events 块")]),t._v(" "),s("p",[t._v("events 块涉及的指令主要影响 Nginx 服务器与用户的网络连接，常用的设置包括是否开启对多 work process 下的网络连接进行序列化，是否允许同时接收多个网络连接，选取哪种事件驱动模型来处理连接请求，每个 word process 可以同时支持的最大连接数等。 上述例子就表示每个 work process 支持的最大连接数为 1024，这部分的配置对 Nginx 的性能影响较大，在实际中应该灵活配置。")]),t._v(" "),s("h3",{attrs:{id:"_5-3-、nginx的location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-、nginx的location"}},[t._v("#")]),t._v(" 5.3 、Nginx的location")]),t._v(" "),s("p",[t._v("server 块可以包含多个 location 块，location 指令用于匹配 uri，语法：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ~ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ~* "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ^~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  /uri/  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("=")]),t._v(" 开头表示精确匹配，如果匹配成功，不再进行后续的查找；")]),t._v(" "),s("li",[s("code",[t._v("^")]),t._v("  以xxx开头的匹配")]),t._v(" "),s("li",[s("code",[t._v("$")]),t._v("  以xxx结尾的匹配")]),t._v(" "),s("li",[s("code",[t._v("*")]),t._v("  代表任意字符")]),t._v(" "),s("li",[s("code",[t._v("^~")]),t._v(" 匹配"),s("strong",[t._v("开头以 xxx 的路径")]),t._v("，理解为匹配 url 路径即可。nginx不对url做编码，因此请求为"),s("code",[t._v("/static/20%/HaC")]),t._v("，可以被规则"),s("code",[t._v("^~ /static/ /HaC")]),t._v("匹配到（注意是空格）")]),t._v(" "),s("li",[s("code",[t._v("~")]),t._v(" 开头表示"),s("strong",[t._v("区分大小写")]),t._v("的正则匹配")]),t._v(" "),s("li",[s("code",[t._v("~*")]),t._v(" 开头表示"),s("strong",[t._v("不区分大小写")]),t._v("的正则匹配")]),t._v(" "),s("li",[s("code",[t._v("!")]),t._v(" 表示不包含xxx就匹配")]),t._v(" "),s("li",[s("code",[t._v("/")]),t._v(" 通用匹配，任何请求都会匹配到。")])]),t._v(" "),s("p",[s("code",[t._v("~*")]),t._v(" 和 "),s("code",[t._v("~")]),t._v("优先级都比较低，如有多个location的正则能匹配的话，则使用正则表达式最长的那个；")]),t._v(" "),s("p",[t._v("如果 uri 包含正则表达式，则必须要有 "),s("code",[t._v("~")]),t._v(" 或 "),s("code",[t._v("~*")]),t._v(" 标志。")]),t._v(" "),s("p",[t._v("借用"),s("a",{attrs:{href:"https://www.cnblogs.com/jpfss/p/10232980.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/jpfss/p/10232980.html"),s("OutboundLink")],1),t._v("博客一文的例子来说明一下：")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则A")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("login "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则B")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则C")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("gif")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("jpg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("png")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("js")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("css")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则D，注意：是根据括号内的大小写进行匹配。括号内全是小写，只匹配小写")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("png")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则E")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("xhtml")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则F")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("xhtml")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则G")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#规则H")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("那么产生的效果如下：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("访问根目录/， 比如http://localhost/ 将匹配规则A")])]),t._v(" "),s("li",[s("p",[t._v("访问 http://localhost/login 将匹配规则B，http://localhost/register 则匹配规则H")])]),t._v(" "),s("li",[s("p",[t._v("访问 http://localhost/static/a.html 将匹配规则C")])]),t._v(" "),s("li",[s("p",[t._v("访问 http://localhost/a.gif, http://localhost/b.jpg 将匹配规则D和规则E，但是规则D顺序优先，规则E不起作用， 而 http://localhost/static/c.png 则优先匹配到 规则C")])]),t._v(" "),s("li",[s("p",[t._v("访问 http://localhost/a.PNG 则匹配规则E， 而不会匹配规则D，因为规则E不区分大小写。")])]),t._v(" "),s("li",[s("p",[t._v("访问 http://localhost/a.xhtml 不会匹配规则F和规则G，http://localhost/a.XHTML不会匹配规则G，（因为 !）。规则F，规则G属于排除法，符合匹配规则也不会匹配到，所以想想看实际应用中哪里会用到。")])]),t._v(" "),s("li",[s("p",[t._v("访问 http://localhost/category/id/1111 则最终匹配到规则H，因为以上规则都不匹配，这个时候nginx转发请求给后端应用服务器，比如FastCGI（php），tomcat（jsp），nginx作为方向代理服务器存在。")])])]),t._v(" "),s("p",[t._v("所以实际使用中，个人觉得至少有三个匹配规则定义，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里是直接转发给后端应用服务器了，也可以是一个静态首页")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一个必选规则")]),t._v("\nlocation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#反向代理")]),t._v("\n    proxy_pass http://127.0.0.1:8080/index\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用")]),t._v("\nlocation ^~ /static/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                              //以xx开头\n    root /webroot/static/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nlocation ~* "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gif"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpeg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ico"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("     //以xx结尾\n    root /webroot/res/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第三个规则就是通用规则，用来转发动态请求到后端应用服务器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#非静态文件请求就默认是动态请求，自己根据实际把握")]),t._v("\nlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_pass http://tomcat:8080/\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-4、nginx的全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4、nginx的全局变量"}},[t._v("#")]),t._v(" 5.4、Nginx的全局变量")]),t._v(" "),s("p",[t._v("Nginx提供了一些全局变量，我们可以在任意的位置使用这些变量。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("全局变量名")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$host")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求信息中的 "),s("code",[t._v("Host")]),t._v("，如果请求中没有 "),s("code",[t._v("Host")]),t._v("行，则等于设置的服务器名，不包含端口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$request_method")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端请求类型，如 "),s("code",[t._v("GET")]),t._v("、"),s("code",[t._v("POST")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$remote_addr")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的 "),s("code",[t._v("IP")]),t._v(" 地址")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$args")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求中的参数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$arg_PARAMETER")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("GET")]),t._v(" 请求中变量名 PARAMETER 参数的值，例如："),s("code",[t._v("$http_user_agent")]),t._v("(Uaer-Agent 值), "),s("code",[t._v("$http_referer")]),t._v("...")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$content_length")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求头中的 "),s("code",[t._v("Content-length")]),t._v(" 字段")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$http_user_agent")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端agent信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$http_cookie")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端cookie信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$remote_addr")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的IP地址")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$remote_port")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端的端口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$http_user_agent")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端agent信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$server_protocol")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求使用的协议，如 "),s("code",[t._v("HTTP/1.0")]),t._v("、"),s("code",[t._v("HTTP/1.1")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$server_addr")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("服务器地址")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$server_name")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("服务器名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$server_port")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("服务器的端口号")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$scheme")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("HTTP类型（如http，https）")])])])]),t._v(" "),s("h3",{attrs:{id:"_5-5、nginx的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5、nginx的语法"}},[t._v("#")]),t._v(" 5.5、Nginx的语法")]),t._v(" "),s("h4",{attrs:{id:"_5-5-1、return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-1、return"}},[t._v("#")]),t._v(" 5.5.1、return")]),t._v(" "),s("p",[t._v("有点类似于Java编程，Nginx也可以使用"),s("code",[t._v("return")]),t._v("关键字进行返回。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" code "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" code URL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" URL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接返回状态码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pages not found"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回状态码 + 一段文本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("302")]),t._v(" /bbs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回状态码 + 重定向地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" https://www.rain.baimuxym.cn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回重定向地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("和"),s("code",[t._v("return")]),t._v("相似的还有"),s("code",[t._v("break")]),t._v("，跳出当前作用域，回到上一层继续向下，可以在server块,location块,if块中使用。")]),t._v(" "),s("h4",{attrs:{id:"_5-5-2、rewrite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-2、rewrite"}},[t._v("#")]),t._v(" 5.5.2、rewrite")]),t._v(" "),s("p",[t._v("重写。（可以理解为重定向）")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("rewrite 正则表达式 要替换的内容 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("rewrite 最后面还可以接参数：")]),t._v(" "),s("ul",[s("li",[t._v("redirect 返回 302 临时重定向；")]),t._v(" "),s("li",[t._v("permanent 返回 301 永久重定向；")])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     charset      utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n     location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 浏览器访问 ip:80/test/，实际访问的是 http://www.baidu.com")]),t._v("\n         rewrite "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^/test/'")]),t._v(" http://www.baidu.com "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     location /image/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其中$1表示引用前面的([a-z]{3}),$2表示引用前面的'(.*)'")]),t._v("\n    \t rewrite "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^/([a-z]{3})/(.*)'")]),t._v(" /web/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v(" permanent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_5-5-3、if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-3、if"}},[t._v("#")]),t._v(" 5.5.3、if")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意，if 和左括号( 有一个空格")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以在server块、location块使用")]),t._v(" "),s("p",[t._v("condition可以是：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    =,!= : 判断变是否相等\n    正则表达式: ~(区分大小写),~*(不区分大小写),!~(~取反),!~*(~*取反)\n    -f,!-f: 文件时是否存在\n    -d,!-d: 目录是否存在\n    -e,!-e: 目录或文件是否在使用\n    -x,!-x: 文件是否可执行\n")])])]),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" ~ Chrome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rewrite /"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(".*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("/browser/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/images/"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trewrite "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(".*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" /pics/ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" POST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \t\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("405")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"_6、负载均衡与限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、负载均衡与限流"}},[t._v("#")]),t._v(" 6、负载均衡与限流")]),t._v(" "),s("h3",{attrs:{id:"_6-1、负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、负载均衡"}},[t._v("#")]),t._v(" 6.1、负载均衡")]),t._v(" "),s("p",[t._v("在头部使用"),s("code",[t._v("upstream")]),t._v("即可使用负载均衡，Nginx 默认提供的负载均衡策略：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1、轮询（默认）round_robin")]),t._v(" "),s("blockquote",[s("p",[t._v("每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除。")])])]),t._v(" "),s("li",[s("p",[t._v("2、IP 哈希 ip_hash")]),t._v(" "),s("blockquote",[s("p",[t._v("每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 共享的问题。")]),t._v(" "),s("p",[t._v("当然，实际场景下，一般不考虑使用 ip_hash 解决 session 共享。")])]),t._v(" "),s("p",[t._v("还有相似的url_hash，"),s("strong",[t._v("通过请求url进行hash，再通过hash值选择后端server")])])]),t._v(" "),s("li",[s("p",[t._v("3、最少连接 least_conn")]),t._v(" "),s("blockquote",[s("p",[t._v("下一个请求将被分派到活动连接数量最少的服务器")])])]),t._v(" "),s("li",[s("p",[t._v("4、权重 weight")]),t._v(" "),s("blockquote",[s("p",[t._v("weight的值越大分配到的访问概率越高，主要用于后端每台服务器性能不均衡的情况下，达到合理的资源利用率。")])])])]),t._v(" "),s("p",[t._v("还可以通过插件支持其他策略。")]),t._v(" "),s("ul",[s("li",[t._v("5、"),s("strong",[t._v("fair")]),t._v("（第三方），按后端服务器的响应时间分配，响应时间短的优先分配，依赖第三方插件 nginx-upstream-fair，需要先安装；")])]),t._v(" "),s("p",[t._v("例如：使用weight负载均衡策略分发请求到不同的服务")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tupstream mysite "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip_hash # ip_hash 方式")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weight权重分配方式，表示 1:1")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:8090 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("weight")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:8091 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("weight")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  hellocoder.com "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\tlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t proxy_pass http://mysite"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用IP、URL hash策略：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("    upstream mysite "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip_hash 策略")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip_hash;")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# url_hash 策略")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("hash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \tserver "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:8090"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:8091"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在 upstream 内可使用的指令：")]),t._v(" "),s("ul",[s("li",[t._v("server 定义上游服务器地址；")]),t._v(" "),s("li",[t._v("zone 定义共享内存，用于跨 worker 子进程；")]),t._v(" "),s("li",[t._v("keepalive 对上游服务启用长连接；")]),t._v(" "),s("li",[t._v("keepalive_requests 一个长连接最多请求 HTTP 的个数；")]),t._v(" "),s("li",[t._v("keepalive_timeout 空闲情形下，一个长连接的超时时长；")]),t._v(" "),s("li",[t._v("hash 哈希负载均衡算法；")]),t._v(" "),s("li",[t._v("ip_hash 依据 IP 进行哈希计算的负载均衡算法；")]),t._v(" "),s("li",[t._v("least_conn 最少连接数负载均衡算法；")]),t._v(" "),s("li",[t._v("least_time 最短响应时间负载均衡算法；")]),t._v(" "),s("li",[t._v("random 随机负载均衡算法；")])]),t._v(" "),s("h3",{attrs:{id:"_6-2、限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2、限流"}},[t._v("#")]),t._v(" 6.2、限流")]),t._v(" "),s("p",[s("code",[t._v("ngx_http_limit_req_module")]),t._v("  模块提供了漏桶算法(leaky bucket)，可以限制单个IP的请求处理频率。")]),t._v(" "),s("p",[t._v("如：")]),t._v(" "),s("p",[s("strong",[t._v("正常限流：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlimit_req_zone "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myLimit:10m "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("rate")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("5r/s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlimit_req "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myLimit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\trewrite / http://www.hac.cn permanent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("参数解释：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("key: 定义需要限流的对象。\nzone: 定义共享内存区来存储访问信息。\nrate: 用于设置最大访问速率。\n")])])]),s("p",[t._v("表示基于客户端192.168.1.1进行限流，定义了一个大小为10M，名称为myLimit的内存区，用于存储IP地址访问信息。")]),t._v(" "),s("p",[s("code",[t._v("rate")]),t._v(" 设置IP访问频率，"),s("code",[t._v("rate=5r/s")]),t._v("表示每秒只能处理每个IP地址的5个请求。Nginx限流是按照毫秒级为单位的，也就是说1秒处理5个请求会变成每200ms只处理一个请求。如果200ms内已经处理完1个请求，但是还是有有新的请求到达，这时候Nginx就会拒绝处理该请求。")]),t._v(" "),s("h2",{attrs:{id:"_7、nginx代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、nginx代理"}},[t._v("#")]),t._v(" 7、Nginx代理")]),t._v(" "),s("h3",{attrs:{id:"_7-1、正向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、正向代理"}},[t._v("#")]),t._v(" 7.1、正向代理")]),t._v(" "),s("p",[t._v("我上传了一个静态网站在某个服务器目录，假如我的服务器是"),s("code",[t._v("81.71.16.134")]),t._v("，")]),t._v(" "),s("p",[t._v("那要如何通过我的域名 "),s("a",{attrs:{href:"https://learnjava.baimuxym.cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://learnjava.baimuxym.cn"),s("OutboundLink")],1),t._v(" 访问它呢？")]),t._v(" "),s("p",[t._v("步骤如下：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先需要把域名解析到我的IP")])]),t._v(" "),s("li",[s("p",[t._v("申请SSL证书，配置服务器")])]),t._v(" "),s("li",[s("p",[t._v("正向代理，监听443端口（因为https的端口是443），转发；监听 80 端口，"),s("code",[t._v("http://")]),t._v(" 强制 跳到 "),s("code",[t._v("https://")]),t._v("。")])])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("  server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听端口")]),t._v("\n       server_name  learnjava.baimuxym.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#请求域名")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重定向至https访问。")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v(" ssl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里改的是")]),t._v("\n    server_name learnjava.baimuxym.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 改为绑定证书的域名")]),t._v("\n\n    ssl on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate /usr/local/nginx/learnjava.baimuxym.cn/1_learnjava.baimuxym.cn_bundle.crt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 改为自己申请得到的 crt 文件的名称或者 pem文件的名称")]),t._v("\n    ssl_certificate_key /usr/local/nginx/learnjava.baimuxym.cn/2_learnjava.baimuxym.cn.key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 改为自己申请得到的 key 文件的名称")]),t._v("\n    ssl_session_timeout 5m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aNULL:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MD5:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("RC4:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("DHE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_prefer_server_ciphers on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有")]),t._v("\n    root  /var/www/web/LearnJavaToFindAJob/docs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的静态网站项目路径，刚刚上传的目录")]),t._v("\n    index index.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首页名称")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_7-2-、反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-、反向代理"}},[t._v("#")]),t._v(" 7.2 、反向代理")]),t._v(" "),s("p",[t._v("和正向代理差不多的配置，我这里列举一下 "),s("code",[t._v("location")]),t._v("的不同：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tproxy_http_version "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代理使用的http协议")]),t._v("\n\tproxy_set_header Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#header添加请求host信息")]),t._v("\n\tproxy_set_header X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# header增加请求来源IP信息")]),t._v("\n\tproxy_set_header X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加>代理记录")]),t._v("\n\tproxy_pass http://127.0.0.1:8888"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("只需要简单使用 "),s("code",[t._v("proxy_pass")]),t._v(" 就可以反向代理，可用于跳转到Tomcat的服务地址、springbooot项目的服务地址。")]),t._v(" "),s("p",[t._v("Nginx详细的实践可以参考：TODOLIST")]),t._v(" "),s("h2",{attrs:{id:"_8、开启-gzip-压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、开启-gzip-压缩"}},[t._v("#")]),t._v(" 8、开启 gzip 压缩")]),t._v(" "),s("p",[t._v("HTTP协议上的gzip编码是一种用来改进web应用程序性能的技术,web服务器和客户端(浏览器)必须共同支持gzip。")]),t._v(" "),s("p",[t._v("目前主流的浏览器,Chrome,firefox,IE等都支持该协议。")]),t._v(" "),s("p",[t._v("**客户端请求时：**支持的浏览器会加上 "),s("code",[t._v("Accept-Encoding: gzip")]),t._v(" 这个 header，表示自己支持 gzip 的压缩方式，")]),t._v(" "),s("p",[t._v("**服务器处理时：**Nginx 在拿到这个请求的时候，如果有相应配置，就会返回经过 gzip 压缩过的文件给浏览器，并在 response 相应的时候加上 "),s("code",[t._v("content-encoding: gzip")]),t._v(" 来告诉浏览器自己采用的压缩方式")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210518165524708.png",alt:""}})]),t._v(" "),s("p",[t._v("Nginx开启gzip的配置如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启gzip")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v(" on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ,建议设置成大于1k,如果小于1k可能会越压越大")]),t._v("\n  gzip_min_length 1k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 压缩比率,用来指定gzip压缩比(1~9)")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1:压缩比最小,速度最快,9:压缩比最大,传输速度最快,但处理最慢,也比较的消耗CPU资源")]),t._v("\n  gzip_comp_level "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进行压缩的文件类型。text/html 文件被系统强制启用")]),t._v("\n  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否在http header中添加Vary: Accept-Encoding，建议开启")]),t._v("\n  gzip_vary on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("开启gzip对网站的性能有很大的提升，比如说我的网站，这是"),s("strong",[t._v("没有开启gzip压缩")]),t._v("前的大小，可以看到是"),s("code",[t._v("50.2kB")]),t._v("，time是"),s("code",[t._v("100ms")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210518164206239.png",alt:""}})]),t._v(" "),s("p",[t._v("这是"),s("strong",[t._v("开启gzip压缩")]),t._v("后的大小，可以看到是"),s("code",[t._v("11.5kB")]),t._v("，time是"),s("code",[t._v("88ms")]),t._v("： "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210518164842720.png",alt:""}})]),t._v(" "),s("p",[t._v("比如说掘金的网站也是使用了gzip，可以通过 content-encoding 进行判断：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210518164046719.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_9、http、ip转发到https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、http、ip转发到https"}},[t._v("#")]),t._v(" 9、HTTP、IP转发到HTTPS")]),t._v(" "),s("p",[t._v("我们购买了SSL证书后配置了HTTPS，用户在访问 "),s("a",{attrs:{href:"http://rain.baimuxym.cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://rain.baimuxym.cn"),s("OutboundLink")],1),t._v(" 或者"),s("a",{attrs:{href:"http://81.71.16.134/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://81.71.16.134"),s("OutboundLink")],1),t._v("访问的时候，我们可以让它强制跳转到 "),s("a",{attrs:{href:"https://rain.baimuxym.cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://rain.baimuxym.cn"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("81.71")]),t._v(".16.134"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://www.baimuxym.cn"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ip重定向跳至https访问。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听端口")]),t._v("\n    server_name  *.baimuxym.cn "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#请求域名")]),t._v("\n    location  ^~ / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_name")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重定向至https访问。")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局非 https 协议时重定向")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$scheme")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_name")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者直接全部重定向，不用判断HTTP还是HTTPS")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v(" https://"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_name")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"_10、nginx的第三方模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、nginx的第三方模块"}},[t._v("#")]),t._v(" 10、Nginx的第三方模块")]),t._v(" "),s("p",[t._v("Nginx提供了很多第三方的模块，相对于一个插件，这里可以查询：https://www.nginx.com/nginx-wiki/build/dirhtml/modules/")]),t._v(" "),s("h3",{attrs:{id:"_1、ngx-http-limit-req-module-限流模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、ngx-http-limit-req-module-限流模块"}},[t._v("#")]),t._v(" 1、ngx_http_limit_req_module 限流模块")]),t._v(" "),s("h4",{attrs:{id:"_1、控制速率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、控制速率"}},[t._v("#")]),t._v(" 1、控制速率")]),t._v(" "),s("p",[s("code",[t._v("ngx_http_limit_req_module")]),t._v("  模块提供了漏桶算法(leaky bucket)，可以限制单个IP的请求处理频率。")]),t._v(" "),s("p",[t._v("如：")]),t._v(" "),s("p",[s("strong",[t._v("1.1 正常限流：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlimit_req_zone "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myLimit:10m "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("rate")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("5r/s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlimit_req "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myLimit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\trewrite / http://www.hac.cn permanent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("参数解释：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("key: 定义需要限流的对象。\nzone: 定义共享内存区来存储访问信息。\nrate: 用于设置最大访问速率。\n")])])]),s("p",[t._v("表示基于客户端192.168.1.1进行限流，定义了一个大小为10M，名称为myLimit的内存区，用于存储IP地址访问信息。rate设置IP访问频率，rate=5r/s表示每秒只能处理每个IP地址的5个请求。Nginx限流是按照毫秒级为单位的，也就是说1秒处理5个请求会变成每200ms只处理一个请求。如果200ms内已经处理完1个请求，但是还是有有新的请求到达，这时候Nginx就会拒绝处理该请求。")]),t._v(" "),s("p",[s("strong",[t._v("1.2 突发流量限制访问频率")])]),t._v(" "),s("p",[t._v("上面rate设置了 5r/s，如果有时候流量突然变大，超出的请求就被拒绝返回503了，突发的流量影响业务就不好了。")]),t._v(" "),s("p",[t._v("这时候可以加上"),s("strong",[t._v("burst")]),t._v(" 参数，一般再结合 "),s("strong",[t._v("nodelay")]),t._v(" 一起使用。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlocation / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlimit_req "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myLimit "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("burst")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" nodelay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\trewrite / http://www.hac.cn permanent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("burst=20 nodelay")]),t._v(" 表示这20个请求立马处理，不能延迟，相当于特事特办。不过，即使这20个突发请求立马处理结束，后续来了请求也不会立马处理。burst=20 相当于缓存队列中占了20个坑，即使请求被处理了，这20个位置这只能按 100ms一个来释放。")]),t._v(" "),s("h4",{attrs:{id:"_2、控制并发连接数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、控制并发连接数"}},[t._v("#")]),t._v(" 2、控制并发连接数")]),t._v(" "),s("p",[s("code",[t._v("ngx_http_limit_conn_module")]),t._v(" 提供了限制连接数功能。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("limit_conn_zone "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("perip:10m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlimit_conn_zone "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$server_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("perserver:10m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    limit_conn perip "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    limit_conn perserver "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("limit_conn perip 10")]),t._v(" 作用的key 是 "),s("code",[t._v("$binary_remote_addr")]),t._v("，表示限制单个IP同时最多能持有10个连接。")]),t._v(" "),s("p",[s("code",[t._v("limit_conn perserver 100")]),t._v(" 作用的key是 "),s("code",[t._v("$server_name")]),t._v("，表示虚拟主机(server) 同时能处理并发连接的总数。")]),t._v(" "),s("blockquote",[s("p",[t._v("注："),s("strong",[t._v("limit_conn perserver 100")]),t._v(" 作用的key是 "),s("strong",[t._v("$server_name")]),t._v("，表示虚拟主机(server) 同时能处理并发连接的总数。")])]),t._v(" "),s("h4",{attrs:{id:"拓展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拓展"}},[t._v("#")]),t._v(" 拓展：")]),t._v(" "),s("p",[t._v("如果不想做限流，还可以设置白名单：")]),t._v(" "),s("p",[t._v("利用 Nginx "),s("code",[t._v("ngx_http_geo_module")]),t._v(" 和 "),s("code",[t._v("ngx_http_map_module")]),t._v(" 两个工具模块提供的功能。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##定义白名单ip列表变量")]),t._v("\ngeo "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    default "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),t._v(".0.0/8 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.0/10 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("81.56")]),t._v(".0.35 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmap "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$limit_key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$binary_remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 正常限流设置")]),t._v("\nlimit_req_zone "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$limit_key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("myRateLimit:10m "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("rate")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10r/s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("geo")]),t._v(" 对于白名单 将返回0，不限流；其他IP将返回1，进行限流。")]),t._v(" "),s("p",[t._v("具体参考：http://nginx.org/en/docs/http/ngx_http_geo_module.html")]),t._v(" "),s("p",[t._v("除此之外：")]),t._v(" "),s("p",[s("code",[t._v("ngx_http_core_module")]),t._v(" 还提供了限制数据传输速度的能力(即常说的下载速度)")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("location /flv/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    flv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    limit_rate_after 500m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    limit_rate       50k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("针对每个请求，表示客户端下载前500m的大小时不限速，下载超过了500m后就限速50k/s。")]),t._v(" "),s("h3",{attrs:{id:"_2、ngx-http-ssl-module模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、ngx-http-ssl-module模块"}},[t._v("#")]),t._v(" 2、ngx_http_ssl_module模块")]),t._v(" "),s("p",[s("code",[t._v("ngx_http_ssl_module")]),t._v("模块提供对HTTPS必要的支持。")]),t._v(" "),s("p",[t._v("常用配置：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、ssl on "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    为指定虚拟机启用HTTPS protocol，建议用listen指令代替\n    可用位置：http, server\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、ssl_certificate "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    当前虚拟主机使用PEM格式的证书文件\n    可用位置：http, server\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、ssl_certificate_key "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    当前虚拟主机上与其证书匹配的私钥文件\n    可用位置：http, server\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、ssl_protocols "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SSLv2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SSLv3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TLSv1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TLSv1.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TLSv1.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    支持ssl协议版本，默认为后三个\n    可用位置：http, server\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、ssl_session_cache off "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" none "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("builtin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("shared:name:size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    builtin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：使用OpenSSL内建缓存，为每worker进程私有\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("shared:name:size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("：在各worker之间使用一个共享的缓存\n    可用位置：http, server\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("、ssl_session_timeout "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    客户端连接可以复用sslsession cache中缓存的ssl参数的有效时长，默认5m\n    可用位置：http, server\n")])])]),s("h2",{attrs:{id:"_11、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、总结"}},[t._v("#")]),t._v(" 11、总结")]),t._v(" "),s("p",[t._v("以上就是一些关于Nginx的简单用法，网上的资料也很多，有兴趣的可以自己学习一下，比如说 图片服务器、文件下载服务器、动静分离、跨域解决等等的实现。")]),t._v(" "),s("p",[t._v("Nginx更详细的说明，建议大家去"),s("a",{attrs:{href:"http://nginx.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx的官方网站"),s("OutboundLink")],1),t._v("查看。")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("参考：")]),t._v(" "),s("ul",[s("li",[t._v("https://mp.weixin.qq.com/s/pjhZi5cmpewwHZNn-aQJiA")]),t._v(" "),s("li",[t._v("https://blog.csdn.net/yexudengzhidao/article/details/100104134")]),t._v(" "),s("li",[t._v("https://www.cnblogs.com/jpfss/p/10232980.html")])])])}),[],!1,null,null,null);s.default=e.exports}}]);