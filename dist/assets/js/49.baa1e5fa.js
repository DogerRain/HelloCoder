(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{458:function(a,s,t){"use strict";t.r(s);var n=t(7),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("SpringBoot提供了一个插件spring-boot-maven-plugin用于把程序打包成一个可执行的jar包。")]),a._v(" "),s("p",[a._v("这个插件和普通的maven打包工具是不一样的。")]),a._v(" "),s("p",[s("strong",[a._v("区别：")])]),a._v(" "),s("p",[a._v("Spring Boot 项目最终打包成的 jar 是可执行 jar ，这种 jar 可以直接通过 "),s("code",[a._v("java -jar xxx.jar")]),a._v(" 命令来运行，但是，这种 jar 不可以被其他项目依赖，即使依赖了也无法使用其中的类。")]),a._v(" "),s("blockquote",[s("p",[a._v("通过jar运行实际上是启动了内置的tomcat")])]),a._v(" "),s("p",[a._v("Spring Boot 的 jar 无法被其他项目依赖，主要还是它和普通 jar 的结构不同。")]),a._v(" "),s("p",[a._v("普通的 jar 包，解压后直接就是包名，包里就是我们的代码，而 Spring Boot 打包成的可执行 jar 解压后，在 "),s("code",[a._v("BOOT-INFclasses")]),a._v(" 目录下才是我们的代码，因此无法被直接引用。")]),a._v(" "),s("h2",{attrs:{id:"_1、官方说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、官方说明"}},[a._v("#")]),a._v(" 1、官方说明")]),a._v(" "),s("p",[a._v("可以看一下springboot官方对这个jar的说明。")]),a._v(" "),s("p",[a._v("链接：https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/htmlsingle/#executable-jar-launching")]),a._v(" "),s("p",[a._v("打包后的jar的结构是这样的，主要分为三大块内容：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("example.jar\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n +-META-INF\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-MANIFEST.MF\n +-org\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-springframework\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     +-boot\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("        +-loader\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("           +-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("spring boot loader classes"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n \t\t\t+-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("spring boot loader2 classes"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n +-BOOT-INF\n    +-classes\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-mycompany\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     +-project\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("        +-XXX.class\n    +-lib\n       +-abc.jar\n       +-abcd.jar\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img/image-20210310112149525.png",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("BOOT-INF/classes：目录存放应用编译后的class文件。（应用程序类目录）")]),a._v(" "),s("li",[a._v("BOOT-INF/lib：目录存放应用依赖的第三方JAR包文件。")]),a._v(" "),s("li",[a._v("META-INF：目录存放应用打包信息(Maven坐标、pom文件)和MANIFEST.MF文件。")]),a._v(" "),s("li",[a._v("org：目录存放SpringBoot相关class文件。")])]),a._v(" "),s("p",[a._v("如果是war包，目录会有点区别：")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("example.war\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("\n +-META-INF\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-MANIFEST.MF\n +-org\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-springframework\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     +-boot\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("        +-loader\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("           +-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("spring boot loader classes"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n +-WEB-INF\n    +-classes\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-com\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("     +-mycompany\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("        +-project\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("           +-YourClasses.class\n    +-lib\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-dependency1.jar\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  +-dependency2.jar\n    +-lib-provided\n       +-servlet-api.jar\n       +-dependency3.jar\n")])])]),s("p",[a._v("依赖项应该放在嵌套的 WEB-INF/lib 目录中。在运行嵌入式时需要的任何依赖项，但在部署到传统 web 容器时不需要的任何依赖项都应该放在 WEB-INF/lib-provided 中。")]),a._v(" "),s("p",[s("strong",[a._v("入口：")])]),a._v(" "),s("p",[a._v("在springboot启动类的入口，官方给出了很明确的解释")]),a._v(" "),s("blockquote",[s("p",[a._v("The "),s("code",[a._v("org.springframework.boot.loader.Launcher")]),a._v(" class is a special bootstrap class that is used as an executable jar’s main entry point. It is the actual "),s("code",[a._v("Main-Class")]),a._v(" in your jar file, and it is used to setup an appropriate "),s("code",[a._v("URLClassLoader")]),a._v(" and ultimately call your "),s("code",[a._v("main()")]),a._v(" method.")]),a._v(" "),s("p",[a._v("Springframework.boot.loader.Launcher 类是一个特殊的引导类，用作可执行 jar 的主入口点。它是 jar 文件中的实际 Main-Class，用于设置适当的 URLClassLoader 并最终调用 main ()方法")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("There are three launcher subclasses ("),s("code",[a._v("JarLauncher")]),a._v(", "),s("code",[a._v("WarLauncher")]),a._v(", and "),s("code",[a._v("PropertiesLauncher")]),a._v("). Their purpose is to load resources ("),s("code",[a._v(".class")]),a._v(" files and so on) from nested jar files or war files in directories (as opposed to those explicitly on the classpath). In the case of "),s("code",[a._v("JarLauncher")]),a._v(" and "),s("code",[a._v("WarLauncher")]),a._v(", the nested paths are fixed. "),s("code",[a._v("JarLauncher")]),a._v(" looks in "),s("code",[a._v("BOOT-INF/lib/")]),a._v(", and "),s("code",[a._v("WarLauncher")]),a._v(" looks in "),s("code",[a._v("WEB-INF/lib/")]),a._v(" and "),s("code",[a._v("WEB-INF/lib-provided/")]),a._v(". You can add extra jars in those locations if you want more. The "),s("code",[a._v("PropertiesLauncher")]),a._v(" looks in "),s("code",[a._v("BOOT-INF/lib/")]),a._v(" in your application archive by default. You can add additional locations by setting an environment variable called "),s("code",[a._v("LOADER_PATH")]),a._v(" or "),s("code",[a._v("loader.path")]),a._v(" in "),s("code",[a._v("loader.properties")]),a._v(" (which is a comma-separated list of directories, archives, or directories within archives).")]),a._v(" "),s("p",[a._v("有三个启动器子类(JarLauncher、 WarLauncher 和 PropertiesLauncher)。它们的目的是装载资源(。类文件等)从目录中的嵌套 jar 文件或 war 文件(与类路径中显式的文件相反)。对于 JarLauncher 和 WarLauncher，嵌套路径是固定的。JarLauncher 在 BOOT-INF/lib/中查找，WarLauncher 在 WEB-INF/lib/和 WEB-INF/lib-proved/中查找。如果需要更多，可以在这些位置添加额外的罐子。PropertiesLauncher 默认在应用程序归档中查找 BOOT-INF/lib/。可以通过在 LOADER.properties 中设置一个名为 LOADER _ path 或 LOADER.path 的环境变量来添加其他位置(这是归档文件中目录、归档文件或目录的逗号分隔列表)。")])]),a._v(" "),s("p",[a._v("这段话的大概意思就是 "),s("code",[a._v("Springframework.boot.loader.Launcher")]),a._v(" 相当于一个类加载器，JarLauncher会将"),s("code",[a._v("BOOT-INF/classes")]),a._v("下的类文件和"),s("code",[a._v("BOOT-INF/lib")]),a._v("下依赖的jar加入到classpath下，后调用"),s("code",[a._v("META-INF/MANIFEST.MF")]),a._v("文件Start-Class属性完成应用程序的启动。")]),a._v(" "),s("p",[s("code",[a._v("BOOT-INF/lib")]),a._v("就是依赖包了，这里不展开，最后会把依赖包加入classpath。")]),a._v(" "),s("p",[a._v("关键的是这个"),s("code",[a._v("META-INF/MANIFEST.MF")]),a._v("，这个文件是程序入口，用来描述jar的信息。")]),a._v(" "),s("p",[a._v("打开这个"),s("code",[a._v("META-INF/MANIFEST.MF")]),a._v("文件看看：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Manifest-Version: 1.0\nImplementation-Title: yudianxx-core\nImplementation-Version: 0.0.1-SNAPSHOT\nArchiver-Version: Plexus Archiver\nBuilt-By: huangyongwen\nImplementation-Vendor-Id: com.yudianxx\nSpring-Boot-Version: 1.5.9.RELEASE\nImplementation-Vendor: Pivotal Software, Inc.\nMain-Class: org.springframework.boot.loader.JarLauncher\nStart-Class: com.SpringBootDemoApplication\nSpring-Boot-Classes: BOOT-INF/classes/\nSpring-Boot-Lib: BOOT-INF/lib/\nCreated-By: Apache Maven 3.0.5\nBuild-Jdk: 1.8.0_131\nImplementation-URL: http://projects.spring.io/spring-boot/springBootLogback/yudianxx-core/\n")])])]),s("p",[a._v("看到这一句：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Main-Class: org.springframework.boot.loader.JarLauncher\nStart-Class: com.SpringBootDemoApplication\n")])])]),s("ul",[s("li",[s("code",[a._v("Main-Class")]),a._v(" 配置项：Java 规定的 "),s("code",[a._v("jar")]),a._v(" 包的启动类，这里设置为 "),s("code",[a._v("spring-boot-loader")]),a._v(" 项目的 JarLauncher 类，进行 Spring Boot 应用的启动。")]),a._v(" "),s("li",[s("code",[a._v("Start-Class")]),a._v(" 配置项：Spring Boot 规定的"),s("strong",[a._v("主")]),a._v("启动类，这里设置为我们定义的 SpringBootDemoApplication类。")])]),a._v(" "),s("h2",{attrs:{id:"_2、那么jarlauncher这个类是的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、那么jarlauncher这个类是的作用是什么"}},[a._v("#")]),a._v(" 2、那么JarLauncher这个类是的作用是什么？")]),a._v(" "),s("p",[a._v("当我们使用java -jar执行jar包的时候会调用JarLauncher的main方法，而不是我们编写的SpringBootDemoApplication。")]),a._v(" "),s("blockquote",[s("p",[a._v("小知识补充：为什么会有 "),s("code",[a._v("Main-Class")]),a._v("/"),s("code",[a._v("Start-Class")]),a._v(" 配置项呢？因为我们是通过 Spring Boot 提供的 Maven 插件 "),s("code",[a._v("spring-boot-maven-plugin")]),a._v(" 进行打包，该插件将该配置项写入到 "),s("code",[a._v("MANIFEST.MF")]),a._v(" 中，从而能让 "),s("code",[a._v("spring-boot-loader")]),a._v(" 能够引导启动 Spring Boot 应用。")])]),a._v(" "),s("p",[a._v("SpringBootDemoApplication 本身都项目自带了main方法，为什么就不能直接运行，而要通过JarLauncher 运行呢？")]),a._v(" "),s("p",[a._v("因为它在 "),s("code",[a._v("BOOT-INF/classes")]),a._v(" 目录下，不符合 Java 默认的 "),s("code",[a._v("jar")]),a._v(" 包的加载规则。因此，需要通过 JarLauncher 启动加载。")]),a._v(" "),s("p",[a._v("当然实际还有一个更重要的原因，Java 规定可执行器的 "),s("code",[a._v("jar")]),a._v(" 包禁止嵌套其它 "),s("code",[a._v("jar")]),a._v(" 包。但是我们可以看到 "),s("code",[a._v("BOOT-INF/lib")]),a._v(" 目录下，实际有 Spring Boot 应用依赖的所有 "),s("code",[a._v("jar")]),a._v(" 包。因此，"),s("code",[a._v("spring-boot-loader")]),a._v(" 项目自定义实现了 ClassLoader 实现类 LaunchedURLClassLoader，支持加载 "),s("code",[a._v("BOOT-INF/classes")]),a._v(" 目录下的 "),s("code",[a._v(".class")]),a._v(" 文件，以及 "),s("code",[a._v("BOOT-INF/lib")]),a._v(" 目录下的 "),s("code",[a._v("jar")]),a._v(" 包。")]),a._v(" "),s("p",[a._v("在项目里面添加一个依赖配置,就可以看JarLauncher的源码：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("boot"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("groupId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("spring"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("boot"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("loader"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("artifactId"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("scope"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("provided"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("dependency"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("看一下这个 JarLauncher 类的方法：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarLauncher")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ExecutableArchiveLauncher")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" BOOT_INF_CLASSES "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BOOT-INF/classes/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" BOOT_INF_LIB "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BOOT-INF/lib/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarLauncher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarLauncher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Archive")]),a._v(" archive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("archive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNestedArchive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Archive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Entry")]),a._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("BOOT_INF_CLASSES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("BOOT_INF_LIB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//项目入口，重点在launch这个方法中")]),a._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarLauncher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("launch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//launch方法")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("launch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerUrlProtocolHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//创建LaunchedURLClassLoader。如果根类加载器和扩展类加载器没有加载到某个类的话，就会通过LaunchedURLClassLoader这个加载器来加载类。这个加载器会从Boot-INF下面的class目录和lib目录下加载类。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" classLoader "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("createClassLoader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassPathArchives")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//这个方法会读取jar描述文件中的Start-Class属性，然后通过反射调用到这个类的main方法。")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("launch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getMainClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" classLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("这里的launch方法会创建一个LaunchedURLClassLoader，也就是自定义的类加载器。")]),a._v(" "),s("h3",{attrs:{id:"关于自定义的类加载器launchedurlclassloader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于自定义的类加载器launchedurlclassloader"}},[a._v("#")]),a._v(" 关于自定义的类加载器LaunchedURLClassLoader")]),a._v(" "),s("p",[a._v("LaunchedURLClassLoader重写了loadClass方法，也就是说它修改了默认的类加载方式(先看该类是否已加载这部分不变，后面真正去加载类的规则改变了，不再是直接从父类加载器中去加载)。LaunchedURLClassLoader定义了自己的类加载规则：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setUseFastConnectionExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("definePackageIfNecessary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IllegalArgumentException")]),a._v(" ex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Tolerate race condition due to being parallel capable")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getPackage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// This should never happen as the IllegalArgumentException indicates")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// that the package has already been defined and, therefore,")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// getPackage(name) should not return null.")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AssertionError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Package "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" has already been "')]),a._v("\n                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"defined but it could not be found"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setUseFastConnectionExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("加载规则：")]),a._v(" "),s("ul",[s("li",[a._v("如果根类加载器存在，调用它的加载方法。这里是根类加载是ExtClassLoader")]),a._v(" "),s("li",[a._v("调用LaunchedURLClassLoader自身的findClass方法，也就是URLClassLoader的findClass方法")]),a._v(" "),s("li",[a._v("调用父类的loadClass方法，也就是执行默认的类加载顺序(从BootstrapClassLoader开始从下往下寻找)")])]),a._v(" "),s("p",[a._v("LaunchedURLClassLoader也有自身的definePackage方法（旧版本应该是findClass方法），作用是")]),a._v(" "),s("ul",[s("li",[a._v("把类名解析成路径并加上.class后缀")]),a._v(" "),s("li",[a._v("基于之前得到的第三方jar包依赖以及自己的jar包得到URL数组，进行遍历找出对应类名的资源，比如path中的spring-boot-loader-1.3.5.RELEASE.jar")])]),a._v(" "),s("h2",{attrs:{id:"简单总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单总结"}},[a._v("#")]),a._v(" 简单总结")]),a._v(" "),s("ul",[s("li",[a._v("Spring Boot 可执行 Jar 包的入口点是 JarLauncher 的 main 方法；")]),a._v(" "),s("li",[a._v("这个方法的执行逻辑是先创建一个 LaunchedURLClassLoader（自定义类加载器），这个加载器加载类的逻辑是：先判断根类加载器和扩展类加载器能否加载到某个类，如果都加载不到就从 Boot-INF 下面的 class 和 lib 目录下去加载；")]),a._v(" "),s("li",[a._v("读取"),s("code",[a._v("Start-Class")]),a._v("属性，通过反射机制调用启动类的 main 方法，这样就顺利调用到我们开发的 Spring Boot 主启动类的 main 方法了。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);