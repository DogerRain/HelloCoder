(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{615:function(t,a,s){"use strict";s.r(a);var v=s(7),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Java是一种面向对象的编程语言。")]),t._v(" "),a("p",[t._v("面向对象是一种思想，一种概念。")]),t._v(" "),a("blockquote",[a("p",[t._v("在面向对象中，把某一类事物所共同的属性和行为抽象出来，这样就形成了一个类，而类的一个实例就叫做对象。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1253198264.cos.ap-guangzhou.myqcloud.com/l",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"对象和对象的引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象和对象的引用"}},[t._v("#")]),t._v(" 对象和对象的引用")]),t._v(" "),a("p",[t._v("既然对象是类的一个实例，我们只要建了一个类，我们就可以把它当做一个对象去使用，去引用这个对象。")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" a2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("A")]),t._v("表示一个对象，"),a("code",[t._v("a1")]),t._v(" 是引用，"),a("code",[t._v("new A")]),t._v(" 就是对象，"),a("code",[t._v("a1")]),t._v(" 就指向了 "),a("code",[t._v("new A")]),t._v(" 的这个对象。")]),t._v(" "),a("p",[t._v("类的一个实例就可以叫做对象，同样，"),a("code",[t._v("a2")]),t._v("也是一个引用")]),t._v(" "),a("blockquote",[a("p",[t._v("a 1、a2 所存放的是一个地址，指向"),a("strong",[t._v("各自")]),t._v(" new A 的对象，但它们的地址是不一样的。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1253198264.cos.ap-guangzhou.myqcloud.com/image-20210111101815188.png",alt:""}})]),t._v(" "),a("p",[t._v("既然有了对象，那就可以和这个对象进行互动了。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" a1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//new 一个 对象A")]),t._v("\na1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HaC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把对象的名字赋值")]),t._v("\na1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("givingGift")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MBP笔记本"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//送对象礼物")]),t._v("\n")])])]),a("p",[t._v("所以说，a1 就是一个指向对象的引用了，掌握了a1，就掌握了对象。")]),t._v(" "),a("h3",{attrs:{id:"面向对象的基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象的基本概念"}},[t._v("#")]),t._v(" 面向对象的基本概念：")]),t._v(" "),a("ul",[a("li",[t._v("类")]),t._v(" "),a("li",[t._v("实例")]),t._v(" "),a("li",[t._v("变量")]),t._v(" "),a("li",[t._v("方法")])]),t._v(" "),a("p",[t._v("类、变量、方法 此前就已经介绍过了，对象是类的实例，拥有了对象，就拥有了类的所有。")]),t._v(" "),a("p",[t._v("但是并不是拥有了所有，因为还有 "),a("strong",[t._v("访问修饰符")])]),t._v(" "),a("h3",{attrs:{id:"访问修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问修饰符"}},[t._v("#")]),t._v(" 访问修饰符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("修饰词")]),t._v(" "),a("th",[t._v("本类")]),t._v(" "),a("th",[t._v("同一个包的类")]),t._v(" "),a("th",[t._v("继承类")]),t._v(" "),a("th",[t._v("其他类")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("public")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")])]),t._v(" "),a("tr",[a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("×")])]),t._v(" "),a("tr",[a("td",[t._v("default（无，默认）")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("×")])]),t._v(" "),a("tr",[a("td",[t._v("private")]),t._v(" "),a("td",[t._v("√")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("×")]),t._v(" "),a("td",[t._v("×")])])])]),t._v(" "),a("p",[t._v("不同的修饰符有不同的访问限制，假如A类存在私有private的方法、变量，则在B类 中指向 "),a("code",[t._v("A a1 = new A")]),t._v("，那么 a1 是无法访问这些变量和方法的，它是私有的。")]),t._v(" "),a("h3",{attrs:{id:"面向对象三大特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象三大特性"}},[t._v("#")]),t._v(" 面向对象三大特性：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("封装")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("继承")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("多态")])])])]),t._v(" "),a("p",[t._v("可以说，面向对象的核心就是由这三大特性构成的，在Java的世界里，你可以理解为"),a("strong",[t._v("万物皆对象")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("所有的对象父类都是Object类")])])])}),[],!1,null,null,null);a.default=_.exports}}]);