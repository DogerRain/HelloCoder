(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{433:function(t,s,a){"use strict";a.r(s);var n=a(7),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h5",{attrs:{id:"_1、下面哪个set类是排序的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、下面哪个set类是排序的"}},[t._v("#")]),t._v(" 1、下面哪个Set类是排序的？")]),t._v(" "),s("p",[t._v("A\tLinkedHashSet")]),t._v(" "),s("p",[t._v("B\tTreeSet")]),t._v(" "),s("p",[t._v("C\tHashSet")]),t._v(" "),s("p",[t._v("D\tAbstractSet")]),t._v(" "),s("p",[s("strong",[t._v("B")])]),t._v(" "),s("p",[t._v("注意，不是有序是排序。")]),t._v(" "),s("p",[t._v("TreeSet 使用二叉树的原理对新 add()的对象按照指定的顺序排序（升序、降序），每增加一个对象都会进行排序，将对象插入的二叉树指定的位置。")]),t._v(" "),s("h5",{attrs:{id:"_2、java-中的集合类包括-arraylist-、-linkedlist-、-hashmap-等-下列关于集合类描述正确的是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、java-中的集合类包括-arraylist-、-linkedlist-、-hashmap-等-下列关于集合类描述正确的是"}},[t._v("#")]),t._v(" 2、Java 中的集合类包括 ArrayList 、 LinkedList 、 HashMap 等，下列关于集合类描述正确的是？（）")]),t._v(" "),s("p",[t._v("A\tArrayList和LinkedList均实现了List接口")]),t._v(" "),s("p",[t._v("B\tArrayList访问速度比LinkedList快")]),t._v(" "),s("p",[t._v("C\t随机添加和删除元素时，ArrayList的表现更加快速")]),t._v(" "),s("p",[t._v("D\tHashMap实现Map接口，它允许任何类型的键和值对象，并允许将NULL用作键或值")]),t._v(" "),s("p",[s("strong",[t._v("A B D")])]),t._v(" "),s("h5",{attrs:{id:"_3、arraylist和linklist的描述-下面说法错误的是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、arraylist和linklist的描述-下面说法错误的是"}},[t._v("#")]),t._v(" 3、ArrayList和LinkList的描述，下面说法错误的是？")]),t._v(" "),s("p",[t._v("A\tLinkedeList和ArrayList都实现了List接口")]),t._v(" "),s("p",[t._v("B\tArrayList是可改变大小的数组，而LinkedList是双向链接串列")]),t._v(" "),s("p",[t._v("C\tLinkedList不支持高效的随机元素访问")]),t._v(" "),s("p",[t._v("D\t在LinkedList的中间插入或删除一个元素意味着这个列表中剩余的元素都会被移动；而在ArrayList的中间插入或删除一个元素的开销是固定的")]),t._v(" "),s("p",[s("strong",[t._v("D")])]),t._v(" "),s("p",[t._v("D这个说法说反了。")]),t._v(" "),s("h5",{attrs:{id:"_4、如果一个list初始化为-5-3-1-执行以下代码后-其结果为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、如果一个list初始化为-5-3-1-执行以下代码后-其结果为"}},[t._v("#")]),t._v(" 4、如果一个list初始化为{5，3，1}，执行以下代码后，其结果为（）？")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("A\t[5, 3, 1, 6]")]),t._v(" "),s("p",[t._v("B\t[4, 3, 1, 6]")]),t._v(" "),s("p",[t._v("C\t[4, 3, 6]")]),t._v(" "),s("p",[t._v("D\t[5, 3, 6]")]),t._v(" "),s("p",[s("strong",[t._v("B")])]),t._v(" "),s("p",[t._v("list{5,3,1}")]),t._v(" "),s("p",[t._v("nums.add(6); //往后边加一个6，{5，3，1，6}")]),t._v(" "),s("p",[t._v("nums.add(0,4);//往下标为0的数加一个4，其他元素后移 {4，5，3，1，6}")]),t._v(" "),s("p",[t._v("nums.remove(1); // 移除下标为1 的元素，{4，3，1，6}")]),t._v(" "),s("h5",{attrs:{id:"_5、list、set、map是否继承自collection接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、list、set、map是否继承自collection接口"}},[t._v("#")]),t._v(" 5、List、Set、Map是否继承自Collection接口？")]),t._v(" "),s("p",[t._v("List、Set 是，Map 不是。")]),t._v(" "),s("p",[t._v("List、Set 是add操作，Map是put的k-v操作。")]),t._v(" "),s("h5",{attrs:{id:"_6、关于java集合下列说法不正确的有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、关于java集合下列说法不正确的有哪些"}},[t._v("#")]),t._v(" 6、关于java集合下列说法不正确的有哪些（）")]),t._v(" "),s("p",[t._v("A\tHashSet 它是线程安全的，不允许存储相同的对象")]),t._v(" "),s("p",[t._v("B\tConcurrentHashMap 它是线程安全的，其中存储的键对象可以重复，值对象不能重复")]),t._v(" "),s("p",[t._v("C\tCollection接口是List接口和Set接口的父接口，通常情况下不被直接使用")]),t._v(" "),s("p",[t._v("D\tArrayList线程安全的，允许存放重复对象")]),t._v(" "),s("p",[s("strong",[t._v("A B D")])]),t._v(" "),s("p",[t._v("线程安全(Thread-safe)的集合对象：")]),t._v(" "),s("p",[t._v("Vector 线程安全")]),t._v(" "),s("p",[t._v("HashTable 线程安全")]),t._v(" "),s("p",[t._v("StringBuffer 线程安全")]),t._v(" "),s("p",[t._v("非线程安全的集合对象：")]),t._v(" "),s("p",[t._v("ArrayList")]),t._v(" "),s("p",[t._v("LinkedList")]),t._v(" "),s("p",[t._v("HashMap")]),t._v(" "),s("p",[t._v("HashSet")]),t._v(" "),s("p",[t._v("TreeMap")]),t._v(" "),s("p",[t._v("TreeSet")]),t._v(" "),s("p",[t._v("StringBulider")]),t._v(" "),s("p",[t._v("HashSet和ArrayList一样线程不安全，ConcurrentHashMap、HashMap "),s("strong",[t._v("键不能重复，值可以重复")])]),t._v(" "),s("h5",{attrs:{id:"_7、-下面哪些具体实现类可以用于存储键-值对-并且方法调用提供了基本的多线程安全支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、-下面哪些具体实现类可以用于存储键-值对-并且方法调用提供了基本的多线程安全支持"}},[t._v("#")]),t._v(" 7、 下面哪些具体实现类可以用于存储键，值对，并且方法调用提供了基本的多线程安全支持：()")]),t._v(" "),s("p",[t._v("A\tjava.util.ConcurrentHashMap")]),t._v(" "),s("p",[t._v("B\tjava.util.Map")]),t._v(" "),s("p",[t._v("C\tjava.util.TreeMap")]),t._v(" "),s("p",[t._v("D\tjava.util.SortMap")]),t._v(" "),s("p",[t._v("E\tjava.util.Hashtable")]),t._v(" "),s("p",[t._v("F\tjava.util.HashMap")]),t._v(" "),s("p",[s("strong",[t._v("A E")])]),t._v(" "),s("h5",{attrs:{id:"_8、java中的集合类包括arraylist、linkedlist、hashmap等类-下列关于集合类描述正确的是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、java中的集合类包括arraylist、linkedlist、hashmap等类-下列关于集合类描述正确的是"}},[t._v("#")]),t._v(" 8、Java中的集合类包括ArrayList、LinkedList、HashMap等类，下列关于集合类描述正确的是（）")]),t._v(" "),s("p",[t._v("A\tArrayList和LinkedList均实现了List接口")]),t._v(" "),s("p",[t._v("B\tArrayList的访问速度比LinkedList快")]),t._v(" "),s("p",[t._v("C\t添加和删除元素时，ArrayList的表现更佳")]),t._v(" "),s("p",[t._v("D\tHashMap实现Map接口，它允许任何类型的键和值对象，并允许将null用作键或值")]),t._v(" "),s("p",[s("strong",[t._v("A B D")])]),t._v(" "),s("p",[t._v("ArrayList插入和现有项的删除开销很大,除非在末端，但是随机访问速度快。LinkedList插入和删除开销很小。")]),t._v(" "),s("h5",{attrs:{id:"_9、请问运行主要的程序会打印出的是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、请问运行主要的程序会打印出的是什么"}},[t._v("#")]),t._v(" 9、请问运行主要的程序会打印出的是什么（）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("3,2")])]),t._v(" "),s("p",[t._v("list有序可重复，set无序不可重复")]),t._v(" "),s("h5",{attrs:{id:"_9、java中的集合类包括arraylist、linkedlist、hashmap等类-下列关于集合类描述正确的是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、java中的集合类包括arraylist、linkedlist、hashmap等类-下列关于集合类描述正确的是"}},[t._v("#")]),t._v(" 9、Java中的集合类包括ArrayList、LinkedList、HashMap等类，下列关于集合类描述正确的是（）")]),t._v(" "),s("p",[t._v("A\tArrayList和LinkedList均实现了List接口")]),t._v(" "),s("p",[t._v("B\tArrayList的访问速度比LinkedList快")]),t._v(" "),s("p",[t._v("C\t添加和删除元素时，ArrayList的表现更佳")]),t._v(" "),s("p",[t._v("D\tHashMap实现Map接口，它允许任何类型的键和值对象，并允许将null用作键或值")]),t._v(" "),s("p",[s("strong",[t._v("A B D")])]),t._v(" "),s("p",[t._v("ArrayList插入和现有项的删除开销很大,除非在末端，但是随机访问速度快。LinkedList插入和删除开销很小。")])])}),[],!1,null,null,null);s.default=r.exports}}]);