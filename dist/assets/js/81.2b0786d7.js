(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{489:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("我本人没有遇到这个问题，但是看到群里的小伙伴被问了，这也是个很有趣的问题，涉及MySQL的原理了，而且还是个坑，会牵涉很多问题。")]),t._v(" "),s("blockquote",[s("p",[t._v("面试官：MySQL的自增ID用完了会怎样？")]),t._v(" "),s("p",[t._v("小白：那插入应该有问题吧。")]),t._v(" "),s("p",[t._v("面试官：会报错吗？还是会覆盖其他列，还是会申请额外空间？")]),t._v(" "),s("p",[t._v("小白：应该会报错。")]),t._v(" "),s("p",[t._v("面试官：那你知道原理是什么吗？")]),t._v(" "),s("p",[t._v("小白：这个不清楚~")])]),t._v(" "),s("h2",{attrs:{id:"_1、mysql的自增id用完了会怎样"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、mysql的自增id用完了会怎样"}},[t._v("#")]),t._v(" 1、MySQL的自增ID用完了会怎样?")]),t._v(" "),s("blockquote",[s("p",[t._v("MySQL版本：8.0.13")])]),t._v(" "),s("p",[t._v("既然想知道自增ID用完了会出现什么样的结果，那干脆来测试一下。")]),t._v(" "),s("p",[s("code",[t._v("int")]),t._v("占4个字节，如果是无符号那么它最大的范围是"),s("code",[t._v("2^32-1 = 4,294,967,295")]),t._v("，约43亿。")]),t._v(" "),s("p",[t._v("我这里使用"),s("code",[t._v("int")]),t._v("作为主键，建表，设置最大的自增ID：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" test \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNSIGNED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4294967295")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HaC"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这个语句是插入成功的：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" id         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4294967295")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" HaC  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("我们此时再插入一条语句 "),s("code",[t._v('INSERT INTO test(name) VALUES ( "HelloCoder" );')])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HelloCoder"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nERROR "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1062")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Duplicate")]),t._v(" entry "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4294967295'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PRIMARY'")]),t._v("\n")])])]),s("p",[t._v("以上结果说明，当再次插入时，使用的自增ID还是 "),s("code",[t._v("4294967295")]),t._v("，并不会再自增，"),s("strong",[t._v("报主键冲突的错误")]),t._v("。所以说，"),s("strong",[t._v("MySQL的自增ID用完了，会导致插入直接报错。")])]),t._v(" "),s("p",[t._v("原理就是设置的主键"),s("code",[t._v("int")]),t._v("的范围决定的。")]),t._v(" "),s("h2",{attrs:{id:"_2、达到最大值了怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、达到最大值了怎么办"}},[t._v("#")]),t._v(" 2、达到最大值了怎么办？")]),t._v(" "),s("p",[t._v("相信你答出插入出错，面试官依然还会问：")]),t._v(" "),s("blockquote",[s("p",[t._v("面试官：假如刚开始选自增ID的时候，使用了int又恰好用完了，那应该怎么办？")]),t._v(" "),s("p",[t._v("小白：简单，使用alter语句修改就行了，换成更大的bigint就行了。")])]),t._v(" "),s("p",[t._v("这样答也不是没有问题，但是其实还是跳入了另外一个坑。")]),t._v(" "),s("p",[t._v("bigint 占8个字节，"),s("code",[t._v("2^64 -1 = 18446744073709551615")]),t._v(" 。")]),t._v(" "),s("p",[t._v("但是，你想想看，上千万上亿的数据，你一个：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modify")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BIGINT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这得到猴年马月，IO不得等很久？服务器都要告警了。")]),t._v(" "),s("blockquote",[s("p",[t._v("面试官：alter修改大表没有什么注意事项吗？")]),t._v(" "),s("p",[t._v("小白：额....应该会锁表")])]),t._v(" "),s("p",[t._v("Mysql在5.6版本之前，直接修改表结构的过程中会锁表，所以不能直接alter表；优选的方案的操作步骤如下：")]),t._v(" "),s("ul",[s("li",[t._v("（1）首先创建新的临时表，表结构通过命令ALTAR TABLE新定义的结构")]),t._v(" "),s("li",[t._v("（2）然后把原表中数据导入到临时表")]),t._v(" "),s("li",[t._v("（3）删除原表")]),t._v(" "),s("li",[t._v("（4）最后把临时表重命名为原来的表名")])]),t._v(" "),s("p",[t._v("Mysql 5.6 虽然引入了Online DDL，在修改表结构的时候，增加"),s("code",[t._v("ALGORITHM=INPLACE, LOCK=NONE")]),t._v("，在运行 alter table 操作的同时允许运行 select,insert,update,delete语句。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" tbl_name CHANGE c1 c1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BIGINT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALGORITHM")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("COPY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("但是以下一些场景，仍然会锁表：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("①某个慢SQL或者比较大的结果集的SQL在运行，执行ALTER TABLE时将会导致锁表发生；")])]),t._v(" "),s("li",[s("p",[t._v("②存在一个事务在操作表的时候，执行ALTER TABLE也会导致修改等待；")])])]),t._v(" "),s("blockquote",[s("p",[t._v("参考MySQL的Online DDL介绍：\nhttps://dev.mysql.com/doc/refman/5.6/en/innodb-online-ddl-operations.html#online-ddl-column-operations")])]),t._v(" "),s("p",[t._v("这是我从上面MySQL官网截取的5.6版本对于Online DDL的支持：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-20210401/image-20210528103213243.png",alt:""}})]),t._v(" "),s("p",[t._v("所以如果你直接使用 ALTER 这样的语句在线修改表数据结构，还是会导致这张表无法进行更新类操作 ( DELETE、UPDATE、DELETE )。")]),t._v(" "),s("p",[t._v("这里有个问题也要注意一下，在执行DDL的时候，还是可以进行DML( DELETE、UPDATE、DELETE )操作的，因为DDL一旦开始了，就无法停止，MySQL会把DML语句缓存到有个buff里面")]),t._v(" "),s("blockquote",[s("p",[t._v("面试官：既然alter会锁表，那有什么办法可以解决吗？")]),t._v(" "),s("p",[t._v("小白：额...")])]),t._v(" "),s("p",[t._v("列举一些建议：")]),t._v(" "),s("ul",[s("li",[t._v("online DDL前，最好确认一下当前数据库有没有类似"),s("code",[t._v("table metadata lock")]),t._v("存在")]),t._v(" "),s("li",[t._v("查看一下有没有未提交的事务，查看事务"),s("code",[t._v("nformation_schema.innodb_trx")]),t._v("表")]),t._v(" "),s("li",[t._v("以上两个问题，总结就是尽量选择流量小的时间点执行，这也是为什么深夜上线的原因。")]),t._v(" "),s("li",[t._v("借助第三方工具，这些工具在DDL是可以不阻塞表，比如说"),s("strong",[t._v("pt-online-schema-change")])]),t._v(" "),s("li",[t._v("最好的方案还是主从切换来做，直接在从库上进行表结构修改，不会阻塞从库的读操作，改完之后，进行主从切换即可。")])]),t._v(" "),s("blockquote",[s("p",[t._v("可以参考阿里的解决方案：https://help.aliyun.com/document_detail/94566.html")])]),t._v(" "),s("h2",{attrs:{id:"_3、有遇到过id用完的情况吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、有遇到过id用完的情况吗"}},[t._v("#")]),t._v(" 3、有遇到过ID用完的情况吗？")]),t._v(" "),s("blockquote",[s("p",[t._v("噼里啪啦前面都答出来.....")]),t._v(" "),s("p",[t._v("面试官：（小伙子还不错）")]),t._v(" "),s("p",[t._v("面试官：那，有遇到过ID用完的情况吗？")]),t._v(" "),s("p",[t._v("小白：额...")])]),t._v(" "),s("p",[t._v("你想想看，既然这个表到达了索引上限，我算它一天插入 10w 条数据，那么就是 "),s("code",[t._v("4294967295 / 100000 / 365 = 117")]),t._v(" 年才用完，再考虑一些删除、ID不连续，那也得好几十年才用完。")]),t._v(" "),s("p",[t._v("好吧，如果面试官非要杠假如一天就1百万、1千万条数据了。")]),t._v(" "),s("p",[t._v("那么就上"),s("code",[t._v("bigint")]),t._v("吧。")]),t._v(" "),s("p",[t._v("等等！")]),t._v(" "),s("p",[t._v("回到最开始的问题上，业务上一个表竟然可以达到几个亿，那说明B+树（Innodb）的查询效率已经很慢了，"),s("strong",[t._v("那为什么不分库分表呢？")])]),t._v(" "),s("blockquote",[s("p",[t._v("小白：没听清，你再问我一遍")]),t._v(" "),s("p",[t._v("面试官：有遇到过ID用完的情况吗？")]),t._v(" "),s("p",[t._v("小白：没遇到过，即使是用int类型的主键，但是我们在ID达到最大值之前，就分库分表了。")]),t._v(" "),s("p",[t._v("面试官：.....好吧，那分库分表分哪几种，如何分？")])]),t._v(" "),s("p",[t._v("欲知下事，且听下回："),s("RouterLink",{attrs:{to:"/01.LearnJavaToFindAJob/03.【中级】12k-26k档/MySQL/articles\\项目深度\\对分库分表的理解，为什么要分库分表？.html"}},[t._v("对分库分表的理解，为什么要分库分表？")])],1)])}),[],!1,null,null,null);s.default=n.exports}}]);