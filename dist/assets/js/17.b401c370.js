(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{416:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h5",{attrs:{id:"_1、下列哪个说法是正确的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、下列哪个说法是正确的"}},[t._v("#")]),t._v(" 1、下列哪个说法是正确的（）")]),t._v(" "),a("p",[t._v("A\tConcurrentHashMap使用synchronized关键字保证线程安全")]),t._v(" "),a("p",[t._v("B\tHashMap实现了Collction接口")]),t._v(" "),a("p",[t._v("C\tArray.asList方法返回java.util.ArrayList对象")]),t._v(" "),a("p",[t._v("D\tSimpleDateFormat是线程不安全的")]),t._v(" "),a("p",[a("strong",[t._v("D")])]),t._v(" "),a("p",[t._v("ConcurrentHashMap 使用segment来分段和管理锁使用ReentrantLock来保证线程安全。")]),t._v(" "),a("p",[t._v("这个是HashMap的源码：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cloneable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v("\n")])])]),a("p",[t._v("Arrays.asList()  返回  java.util.Arrays.ArrayList 对象，这里的 ArrayList 是 Arrays 私有的内部类；并不是java.util.ArrayList。")]),t._v(" "),a("p",[t._v("SimpleDateFormat没有加同步锁，故不安全。")]),t._v(" "),a("h5",{attrs:{id:"_2、下面代码的运行结果是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、下面代码的运行结果是"}},[t._v("#")]),t._v(" 2、下面代码的运行结果是（）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s="')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("A\t代码编程成功，并输出”s=”")]),t._v(" "),a("p",[t._v("B\t代码编译成功，并输出”s=null”")]),t._v(" "),a("p",[t._v("C\t由于String s没有初始化，代码不能编译通过。")]),t._v(" "),a("p",[t._v("D\t代码编译成功，但捕获到NullPointException异常")]),t._v(" "),a("p",[a("strong",[t._v("C")])]),t._v(" "),a("p",[t._v("局部变量没有默认值")]),t._v(" "),a("h5",{attrs:{id:"_3、jdk1-8版本之前-抽象类和接口的区别-以下说法错误的是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、jdk1-8版本之前-抽象类和接口的区别-以下说法错误的是"}},[t._v("#")]),t._v(" 3、JDK1.8版本之前，抽象类和接口的区别，以下说法错误的是（）")]),t._v(" "),a("p",[t._v("A\t 接口是公开的，里面不能有私有的方法或变量，是用于让别人使用的，而抽象类是可以有私有方法或私有变量的。")]),t._v(" "),a("p",[t._v("B\tabstract class 在 Java 语言中表示的是一种继承关系，一个类只能使用一次继承关系。但是，一个类却可以实现多个interface，实现多重继承。接口还有标识（里面没有任何方法，如Remote接口）和数据共享（里面的变量全是常量）的作用。")]),t._v(" "),a("p",[t._v("C\t在abstract class 中可以有自己的数据成员，也可以有非abstarct的成员方法，而在interface中，只能够有静态的不能被修改的数据成员（也就是必须是 static final的，不过在 interface中一般不定义数据成员），所有的成员方法默认都是 public abstract 类型的。")]),t._v(" "),a("p",[t._v('D\tabstract class和interface所反映出的设计理念不同。其实abstract class表示的是"has-a"关系，interface表示的是"is-a"关系。')]),t._v(" "),a("p",[a("strong",[t._v("D")])]),t._v(" "),a("p",[t._v('abstract class表示的是"is-a"关系，interface表示的是"like-a"关系。')]),t._v(" "),a("p",[t._v("接口中：")]),t._v(" "),a("p",[t._v("如果是Java 7以及以前的版本，那么接口中可以包含的内容有：1. 常量；2. 抽象方法\n如果是Java 8，还可以额外包含有：3. 默认方法；4. 静态方法\n如果是Java 9，还可以额外包含有：5. 私有方法")]),t._v(" "),a("p",[t._v("final变量在使用前必须先赋值")]),t._v(" "),a("h5",{attrs:{id:"_5、-关于java内存区域下列说法不正确的有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、-关于java内存区域下列说法不正确的有哪些"}},[t._v("#")]),t._v(" 5、 关于Java内存区域下列说法不正确的有哪些？")]),t._v(" "),a("p",[t._v("A\t程序计数器是一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的信号指示器，每个线程都需要一个独立的程序计数器.")]),t._v(" "),a("p",[t._v("B\tJava虚拟机栈描述的是java方法执行的内存模型，每个方法被执行的时候都会创建一个栈帧，用于存储局部变量表、类信息、动态链接等信息")]),t._v(" "),a("p",[t._v("C\tJava堆是java虚拟机所管理的内存中最大的一块，每个线程都拥有一块内存区域，所有的对象实例以及数组都在这里分配内存。")]),t._v(" "),a("p",[t._v("D\t方法区是各个线程共享的内存区域，它用于存储已经被虚拟机加载的常量、即时编译器编译后的代码、静态变量等数据。")]),t._v(" "),a("p",[a("strong",[t._v("B C")])]),t._v(" "),a("p",[t._v("java虚拟机栈："),a("strong",[t._v("线程私有")]),t._v("，"),a("strong",[t._v("没有类信息，类信息是在方法区中")])]),t._v(" "),a("p",[t._v("java堆是被所有线程共享的一块内存区域，"),a("strong",[t._v("而不是每个线程都拥有一块内存区域。")])]),t._v(" "),a("h5",{attrs:{id:"_6、在java中重写方法应遵循规则的包括"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、在java中重写方法应遵循规则的包括"}},[t._v("#")]),t._v(" 6、在java中重写方法应遵循规则的包括（）")]),t._v(" "),a("p",[t._v("A\t访问修饰符的限制一定要大于被重写方法的访问修饰符")]),t._v(" "),a("p",[t._v("B\t可以有不同的访问修饰符")]),t._v(" "),a("p",[t._v("C\t参数列表必须完全与被重写的方法相同")]),t._v(" "),a("p",[t._v("D\t必须具有不同的参数列表")]),t._v(" "),a("p",[a("strong",[t._v("B C")])]),t._v(" "),a("p",[t._v("方法重写要注意的事项：\n1.方法重写时， 方法名与形参列表必须一致。\n2.方法重写时，子类的权限修饰符必须要大于或者等于父类的权限修饰符。\n3.方法重写时，子类的返回值类型必须要小于或者等于父类的返回值类型。\n4.方法重写时， 子类抛出的异常类型要小于或者等于父类抛出的异常类型。\nException(大)\nRuntimeException(小)")]),t._v(" "),a("p",[t._v("A选项的一定要大于错误，而是子类重写方法的访问权限"),a("strong",[t._v("不能低于")]),t._v("父类重写方法的访问权限")]),t._v(" "),a("p",[t._v("D 是重载要求")]),t._v(" "),a("h5",{attrs:{id:"_7、要使某个类能被同一个包中的其他类访问-但不能被这个包以外的类访问-可以"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、要使某个类能被同一个包中的其他类访问-但不能被这个包以外的类访问-可以"}},[t._v("#")]),t._v(" 7、要使某个类能被同一个包中的其他类访问，但不能被这个包以外的类访问，可以( )")]),t._v(" "),a("p",[t._v("A\t让该类不使用任何关键字")]),t._v(" "),a("p",[t._v("B\t使用private关键字")]),t._v(" "),a("p",[t._v("C\t使用protected关键字")]),t._v(" "),a("p",[t._v("D\t使用void关键字")]),t._v(" "),a("p",[a("strong",[t._v("A")])]),t._v(" "),a("p",[t._v("总结：default拒绝一切包外访问；protected接受包外的子类访问")]),t._v(" "),a("p",[t._v("public>protected>default>private")]),t._v(" "),a("h5",{attrs:{id:"_8、枚举-enum-属于原始数据类型-primitive-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、枚举-enum-属于原始数据类型-primitive-type"}},[t._v("#")]),t._v(" 8、枚举（enum）属于原始数据类型（primitive type）？")]),t._v(" "),a("p",[t._v("错误")]),t._v(" "),a("p",[t._v("在Java中，变量有两种类型，一种是原始类型，一种是引用类型。")]),t._v(" "),a("p",[t._v("原始类型一共有8种，它们分别是char,boolean,byte,short,int,long,float,double。")]),t._v(" "),a("h5",{attrs:{id:"_9、java语言中-下面哪个语句是创建数组的正确语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、java语言中-下面哪个语句是创建数组的正确语句"}},[t._v("#")]),t._v(" 9、Java语言中，下面哪个语句是创建数组的正确语句？(   )")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("D")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("A B D E")])]),t._v(" "),a("p",[t._v("一维长度必须定义，二维可以后续定义")]),t._v(" "),a("h5",{attrs:{id:"_10、jdk1-8中-下面有关java-抽象类和接口的区别-说法错误的是"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、jdk1-8中-下面有关java-抽象类和接口的区别-说法错误的是"}},[t._v("#")]),t._v(" 10、jdk1.8中，下面有关java 抽象类和接口的区别，说法错误的是？")]),t._v(" "),a("p",[t._v("A\t抽象类可以有构造方法，接口中不能有构造方法")]),t._v(" "),a("p",[t._v("B\t抽象类中可以包含非抽象的普通方法，接口中的方法必须是抽象的，不能有非抽象的普通方法")]),t._v(" "),a("p",[t._v("C\t一个类可以实现多个接口，但只能继承一个抽象类")]),t._v(" "),a("p",[t._v("D\t接口中可以有普通成员变量，抽象类中没有普通成员变量")]),t._v(" "),a("p",[a("strong",[t._v("B D")])]),t._v(" "),a("p",[t._v("参考第3题答案")]),t._v(" "),a("p",[a("strong",[t._v("抽象类")]),t._v("\n1.抽象类中可以构造方法\n2.抽象类中可以存在普通属性，方法，静态属性和方法。\n3.抽象类中可以存在抽象方法。\n4.如果一个类中有一个抽象方法，那么当前类一定是抽象类；抽象类中不一定有抽象方法。\n5.抽象类中的抽象方法，需要有子类实现，如果子类不实现，则子类也需要定义为抽象的。\n"),a("strong",[t._v("接口")]),t._v("\n1.在接口中只有方法的声明，没有方法体。\n2.在接口中只有常量，因为定义的变量，在编译的时候都会默认加上 public static final\n3.在接口中的方法，永远都被public来修饰。\n4.接口中没有构造方法，也不能实例化接口的对象。\n5.接口可以实现多继承\n6.接口中定义的方法都需要有实现类来实现，如果实现类不能实现接口中的所有方法，则实现类定义为抽象类。")]),t._v(" "),a("p",[a("strong",[t._v("java8中")]),t._v("接口 可以有default、static方法，所以B是错的。")])])}),[],!1,null,null,null);a.default=e.exports}}]);