(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{651:function(a,v,e){"use strict";e.r(v);var n=e(7),t=Object(n.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("p",[a._v("Maven、gradle 作为主流的构建工具，几乎所有的Java项目都使用，但是Maven相对gradle来说，构建还是太慢了。特别是构建十几个子项目的程序。")]),a._v(" "),v("p",[a._v("如果要把项目从Maven转换成gradle，成本也是巨大的。")]),a._v(" "),v("p",[a._v("但是现在有了 maven-mvnd ，可以使构建变得更快。")]),a._v(" "),v("h2",{attrs:{id:"_1、maven-mvnd介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、maven-mvnd介绍"}},[a._v("#")]),a._v(" 1、maven-mvnd介绍")]),a._v(" "),v("p",[v("code",[a._v("maven-mvnd")]),a._v("是"),v("code",[a._v("Apache Maven团队")]),a._v("借鉴了"),v("code",[a._v("Gradle")]),a._v("和"),v("code",[a._v("Takari")]),a._v("的优点，衍生出来的更快的构建工具，是maven的"),v("code",[a._v("强化版")]),a._v("。")]),a._v(" "),v("p",[a._v("github地址："),v("a",{attrs:{href:"https://github.com/apache/maven-mvnd",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/apache/maven-mvnd"),v("OutboundLink")],1)]),a._v(" "),v("p",[a._v("maven-mvnd 特性：")]),a._v(" "),v("ul",[v("li",[a._v("嵌入 Maven (所以不需要单独安装 Maven)；"),v("code",[a._v("maven 过渡到 maven-mvnd")]),a._v("的过程中实现 "),v("code",[a._v("无缝切换")]),a._v("！所以不需要再安装maven或进行复杂的配置更改。")]),a._v(" "),v("li",[a._v("实际的构建发生在一个长期存在的后台进程中，也就是守护进程。如果没有为构建请求服务的空闲守护进程，则可以并行产生多个守护进程。")]),a._v(" "),v("li",[a._v("一个守护进程实例可以处理来自 mvnd 客户机的多个连续请求。")]),a._v(" "),v("li",[a._v("使用 GraalVM 构建的本地可执行文件。与传统的 JVM 相比，它启动更快，使用的内存更少。")])]),a._v(" "),v("p",[a._v("这种架构带来的优势有：")]),a._v(" "),v("ul",[v("li",[v("p",[a._v("运行实际构建的 JVM 不需要为每个构建重新启动，节省时间。")])]),a._v(" "),v("li",[v("p",[a._v("JVM 中的实时(JIT)编译器生成的本机代码也保留了下来。与 Maven 相比，JIT 编译花费的时间更少。在重复构建过程中，JIT 优化的代码可以立即使用。这不仅适用于来自 Maven 插件和 Maven Core 的代码，也适用于来自 JDK 本身的所有代码。")])])]),a._v(" "),v("h2",{attrs:{id:"_2、使用步骤"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用步骤"}},[a._v("#")]),a._v(" 2、使用步骤")]),a._v(" "),v("h3",{attrs:{id:"_2-1、下载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、下载"}},[a._v("#")]),a._v(" 2.1、下载")]),a._v(" "),v("p",[a._v("下载："),v("a",{attrs:{href:"https://github.com/mvndaemon/mvnd/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/mvndaemon/mvnd/releases"),v("OutboundLink")],1)]),a._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/Home/image-20220309150339060.png",alt:""}})]),a._v(" "),v("p",[a._v("我这里是windows，下载 "),v("code",[a._v("mvnd-0.7.1-windows-amd64.zip")]),a._v(" 版本即可。")]),a._v(" "),v("h3",{attrs:{id:"_2-2、安装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、安装"}},[a._v("#")]),a._v(" 2.2、安装")]),a._v(" "),v("p",[a._v("直接解压。")]),a._v(" "),v("p",[a._v("然后配置环境变量：将 bin 目录添加到 PATH")]),a._v(" "),v("h3",{attrs:{id:"_2-3、测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、测试"}},[a._v("#")]),a._v(" 2.3、测试")]),a._v(" "),v("p",[a._v("打开CMD终端，输入 "),v("code",[a._v("mvnd -v")])]),a._v(" "),v("p",[a._v("可以看到如下信息表示安装成功：")]),a._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[a._v("C:"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Users"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("HaC"),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" mvnd -v\nmvnd native client "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.7")]),a._v(".1-windows-amd64 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("97c587c11383a67b5bd0ff8388bd94c694b91c1e"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nTerminal: org.jline.terminal.impl.jansi.win.JansiWinSysTerminal\nApache Maven "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.8")]),a._v(".3 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ff8e977a158738155dc465c6a97ffaf31982d739"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nMaven home: E:"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("apache-mvnd-0.7.1-windows-amd64"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("mvn\nJava version: "),v("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.8")]),a._v(".0_131, vendor: Oracle Corporation, runtime: E:"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("JDK1.8"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("jre\nDefault locale: zh_CN, platform encoding: GBK\nOS name: "),v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"windows 10"')]),a._v(", version: "),v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"10.0"')]),a._v(", arch: "),v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"amd64"')]),a._v(", family: "),v("span",{pre:!0,attrs:{class:"token string"}},[a._v('"windows"')]),a._v("\n")])])]),v("p",[a._v("可以看到 mvnd 集成了 Maven 3.8.3 版本。")]),a._v(" "),v("h3",{attrs:{id:"_2-4、使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-4、使用"}},[a._v("#")]),a._v(" 2.4、使用")]),a._v(" "),v("p",[a._v("在使用上和Maven一样，参数也一致。")]),a._v(" "),v("p",[a._v("Maven 使用 "),v("code",[a._v("mvn clean package")]),a._v(" ；使用Maven-mvnd 只需要变成 "),v("code",[a._v("mvnd clean package")]),a._v(" 即可，其他同理。")]),a._v(" "),v("h3",{attrs:{id:"_2-5、配置修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-5、配置修改"}},[a._v("#")]),a._v(" 2.5、配置修改")]),a._v(" "),v("p",[a._v("为了最小程度的兼容原来的Maven，可以使用原来的 "),v("code",[a._v("setting.xml")])]),a._v(" "),v("p",[a._v("打开 Maven-mvnd 安装目录下 的 "),v("code",[a._v("/conf/mvnd.properties")]),a._v(" 文件，修改：")]),a._v(" "),v("div",{staticClass:"language-properties extra-class"},[v("pre",{pre:!0,attrs:{class:"language-properties"}},[v("code",[v("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("maven.settings")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),v("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("E://apache-maven-3.5.4-bin//apache-maven-3.5.4//conf//settings.xml")]),a._v("\n")])])]),v("p",[a._v("（注意是 "),v("code",[a._v("//")]),a._v("）")]),a._v(" "),v("h2",{attrs:{id:"_3、打包对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、打包对比"}},[a._v("#")]),a._v(" 3、打包对比")]),a._v(" "),v("p",[a._v("由于 mvnd-0.7.1 版本使用了Maven 3.8.3版本，我这里同样使用Maven 3.8.3进行对比。")]),a._v(" "),v("p",[a._v("命令：")]),a._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# maven 打包命令")]),a._v("\nmvn clean package -Dmaven.test.skip"),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mvnd 打包命令")]),a._v("\nmvnd clean package -Dmaven.test.skip"),v("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n")])])]),v("p",[a._v("电脑配置：")]),a._v(" "),v("p",[a._v("CPU：Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz   3.60 GHz")]),a._v(" "),v("p",[a._v("内存：16GB")]),a._v(" "),v("p",[a._v("结果如下：")]),a._v(" "),v("ul",[v("li",[a._v("13个子项目")])]),a._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/Home/image-2022-03-09-1646811043.png",alt:""}})]),a._v(" "),v("p",[a._v("可以看到 "),v("strong",[a._v("mvnd 打包的总时间比 mvn 快了不少")]),a._v("，因为 mvnd 使用了CPU的多核心，可以看到每个子模块打包的时间都差不多，所以在单核的机器，就不要尝试使用 mvnd 了。")]),a._v(" "),v("ul",[v("li",[a._v("19个子项目")])]),a._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/Home/image-2022-03-09-1646817991.png",alt:""}})]),a._v(" "),v("p",[a._v("呈现子项目越多，相对速度更快的趋势。")]),a._v(" "),v("p",[a._v("总的来说，如果项目模块很多，可以尝试使用 mvnd 进行辅助打包，比如 测试、生产，可以节省很多时间；")]),a._v(" "),v("p",[a._v("开发则可以继续使用 mvn ，毕竟 IDEA 无法集成 mvnd。")])])}),[],!1,null,null,null);v.default=t.exports}}]);