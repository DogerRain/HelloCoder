(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{594:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("code",[t._v("char")]),t._v("类型使用单引号"),a("code",[t._v("'")]),t._v("，且仅有一个字符，")]),t._v(" "),a("p",[a("code",[t._v("String")]),t._v(" 类型使用双引号"),a("code",[t._v('"')]),t._v(" ，不止一个字符，可以用来存储中文、英文、数字")]),t._v(" "),a("h2",{attrs:{id:"char-字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char-字符"}},[t._v("#")]),t._v(" char 字符")]),t._v(" "),a("p",[t._v("字符类型"),a("code",[t._v("char")]),t._v("是基本数据类型，占用 2个字节，一个"),a("code",[t._v("char")]),t._v("保存一个Unicode字符")]),t._v(" "),a("blockquote",[a("p",[t._v("中国用GB18030、美国用ASCII表示字符编码，不同国家都有自己的标准，Unicode将世界上所有的符号都纳入其中，每一个符号都给予一个独一无二的编码，这样就不会有乱码了。")]),t._v(" "),a("p",[t._v("UTF-8编码、UTF-16编码是Unicode的实现方式之一，在Java中，char类型描述的了UTF-16编码中额一个代码单元。")]),t._v(" "),a("p",[t._v("但是！强烈建议不要在代码中使用char类型，除非确实需要处理UTF-16。最好使用字符串处理数据。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" sex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Java内存中是使用Unicode字符表示存储的内容，要显示一个字符的Unicode格式，可以直接把"),a("code",[t._v("char")]),t._v(" 类型赋予给"),a("code",[t._v("int")]),t._v("类型")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sexInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符 '男' 的Unicodde编码是 30007")]),t._v("\n")])])]),a("p",[t._v("而"),a("code",[t._v("char")]),t._v("数据类型是一个采用 UTF-16 编码表示 Unicode代码点的代码单元，所以char可以识别一个16进制的字符。")]),t._v(" "),a("blockquote",[a("p",[t._v("直接用转义字符"),a("code",[t._v("\\u")]),t._v("+Unicode编码的16进制 来表示一个字符")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" hex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toHexString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30007")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把 30007 转为16进制 ， 十进制的30007 = 十六进制的 7537")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" sexChar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\u7537'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '男'")]),t._v("\n")])])]),a("h2",{attrs:{id:"string-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[t._v("#")]),t._v(" String 字符串")]),t._v(" "),a("p",[t._v("最常见的引用数据类型就是"),a("code",[t._v("String")]),t._v("，"),a("code",[t._v("String")]),t._v("的底层其实是一个"),a("code",[t._v("char[]")]),t._v(" 数组，但是String 很特殊，是一个 "),a("code",[t._v("final")]),t._v(" 修饰的类。")]),t._v(" "),a("p",[t._v("String 作为常用的数据类型，描述的是字符串。用双引号"),a("code",[t._v('""')]),t._v("表示。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HaC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("String 不属于基本数据类型，属于引用数据类型，引用类型的默认值是null，所以 String 的默认初始值也是null")]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v(" 在Java中表示 空 ，表示没有为该变量分配内存空间")])]),t._v(" "),a("h3",{attrs:{id:"转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[t._v("#")]),t._v(" 转义字符")]),t._v(" "),a("p",[t._v("String 字符串是用 一对双引号 "),a("code",[t._v('" "')]),t._v(" 表示的，假如我们要打印以下这种格式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('我的公众号:"HelloCoder"\n')])])]),a("p",[t._v("啪的一声，很快就写下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我的公众号:"')]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloCoder")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("发现报错了：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1253198264.cos.ap-guangzhou.myqcloud.com/image-20210107112141838.png",alt:""}})]),t._v(" "),a("p",[t._v("提示 "),a("code",[t._v('";" expected Not a statement')]),t._v("，什么意思呢？")]),t._v(" "),a("p",[t._v("Java它不能识别这么花里胡哨的双引号，它会认为 前面是一对双引号 "),a("code",[t._v('" 我的公众号:"')]),t._v(" 是一个字符串，后面是一对双引号"),a("code",[t._v('" "')]),t._v("也是一个字符串。")]),t._v(" "),a("p",[t._v("既然是一对双引号，你就应该用 分号"),a("code",[t._v(";")]),t._v(" 来结束这段代码。中间的"),a("code",[t._v("HelloCoder")]),t._v(" 算个锤子？")]),t._v(" "),a("p",[t._v("那怎么办呢？这就需要使用"),a("code",[t._v("Java的转义字符")]),t._v("来声明了。")]),t._v(" "),a("blockquote",[a("p",[t._v("Java中可以使用反斜杠\\ 来表示转义。")]),t._v(" "),a("p",[t._v("所谓转义就是使用反斜杠\\来让这个字符表示不同寻常的意义。")])]),t._v(" "),a("p",[a("strong",[t._v("Java规定： 使用 "),a("code",[t._v('\\"')]),t._v(" 来表示一个双引号。")])]),t._v(" "),a("p",[t._v("修改一下代码：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我的公众号:\\"HelloCoder\\" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样就不会报错了。最后输出：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' 我的公众号:"HelloCoder" \n')])])]),a("p",[a("strong",[t._v("常见的转义字符：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("转义字符")]),t._v(" "),a("th",[t._v("意义")]),t._v(" "),a("th",[t._v("ASCII码值（十进制）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\a")]),t._v(" "),a("td",[t._v("响铃(BEL)")]),t._v(" "),a("td",[t._v("007")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",[t._v("退格(BS) ，将当前位置移到前一列")]),t._v(" "),a("td",[t._v("008")])]),t._v(" "),a("tr",[a("td",[t._v("\\f")]),t._v(" "),a("td",[t._v("换页(FF)，将当前位置移到下页开头")]),t._v(" "),a("td",[t._v("012")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("\\n")])]),t._v(" "),a("td",[a("strong",[t._v("换行")]),t._v("，将当前位置移到下一行开头**")]),t._v(" "),a("td",[t._v("010")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("\\r")])]),t._v(" "),a("td",[a("strong",[t._v("回车")]),t._v("，将当前位置移到本行开头")]),t._v(" "),a("td",[t._v("013")])]),t._v(" "),a("tr",[a("td",[a("strong",[t._v("\\t")])]),t._v(" "),a("td",[a("strong",[t._v("水平制表")]),t._v("（跳到下一个"),a("strong",[t._v("TAB")]),t._v("位置）")]),t._v(" "),a("td",[t._v("009")])]),t._v(" "),a("tr",[a("td",[t._v("\\v")]),t._v(" "),a("td",[t._v("垂直制表(VT)")]),t._v(" "),a("td",[t._v("011")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\\\")])]),t._v(" "),a("td",[t._v("**代表一个反斜线字符 "),a("code",[t._v("\\")]),t._v(" **")]),t._v(" "),a("td",[t._v("092")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\'")])]),t._v(" "),a("td",[a("strong",[t._v("代表一个单引号（撇号）字符")])]),t._v(" "),a("td",[t._v("039")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v('\\"')])]),t._v(" "),a("td",[a("strong",[t._v("代表一个双引号字符")])]),t._v(" "),a("td",[t._v("034")])]),t._v(" "),a("tr",[a("td",[t._v("\\0")]),t._v(" "),a("td",[t._v("空字符(NULL)")]),t._v(" "),a("td",[t._v("000")])])])]),t._v(" "),a("p",[t._v("比如说我要使用"),a("code",[t._v("\\n")]),t._v("换行：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我的公众号:\\n\\"HelloCoder\\" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' 我的公众号:\n"HelloCoder" \n')])])]),a("h3",{attrs:{id:"字符串的拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的拼接"}},[t._v("#")]),t._v(" 字符串的拼接")]),t._v(" "),a("p",[t._v("Java规定，可以使用 "),a("code",[t._v("+")]),t._v(" 来拼接字符串。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我是HaC，"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我的公众号:\\"HelloCoder\\" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一步到位")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我是HaC，"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 我的公众号:\\"HelloCoder\\" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("输出：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' 我是HaC， 我的公众号:"HelloCoder" \n 我是HaC， 我的公众号:"HelloCoder" \n')])])]),a("h3",{attrs:{id:"字符串和整型数据拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串和整型数据拼接"}},[t._v("#")]),t._v(" 字符串和整型数据拼接")]),t._v(" "),a("p",[a("code",[t._v("+")]),t._v("在基本数据类型中，表示运算，在字符串中，表示拼接。")]),t._v(" "),a("p",[t._v("但是 "),a("code",[t._v("字符串")]),t._v("+ "),a("code",[t._v("整型")]),t._v(" 会如何输出呢？")]),t._v(" "),a("blockquote",[a("p",[t._v("Java中 字符串+整型 ，或者 整型+字符串 都是返回一个 字符串，但是顺序不一样，输出也不一样。")])]),t._v(" "),a("p",[t._v("eg：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HelloCoder"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3HelloCoder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HelloCoder12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1HelloCoder2")]),t._v("\n")])])]),a("p",[a("code",[t._v("x + y + str")]),t._v(" 可以拆分：首先是执行  "),a("code",[t._v("x+y")]),t._v(" , 返回"),a("code",[t._v("3")]),t._v("，然后 "),a("code",[t._v('3+ "HelloCoder"')]),t._v("，最后返回字符串 "),a("code",[t._v("3HelloCoder")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("str + x + y")]),t._v(" 可以拆分：首先是执行 "),a("code",[t._v("str + x")]),t._v("，返回 "),a("code",[t._v("HelloCoder1")]),t._v("，然后 "),a("code",[t._v('"HelloCoder1"+2')]),t._v("，最后返回字符串 "),a("code",[t._v("HelloCoder12")]),t._v("。")])])}),[],!1,null,null,null);a.default=e.exports}}]);