(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{589:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Java的变量的类型分为两种")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型")]),t._v(" "),a("li",[t._v("引用数据类型")])]),t._v(" "),a("p",[t._v("变量，就像数学的表达式一样， y = x + 1，y 和 x 都是变量。")]),t._v(" "),a("p",[t._v("在Java中，变量必须先定义后使用。")]),t._v(" "),a("h2",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),a("p",[t._v("再来回顾一下java的8大基本数据类型。")]),t._v(" "),a("p",[t._v("8种基本数据按类型分可以分为")]),t._v(" "),a("ul",[a("li",[t._v("4个 整数型：byte、short、int、long")]),t._v(" "),a("li",[t._v("2个浮点型：float、double")]),t._v(" "),a("li",[t._v("1个字符类型：char")]),t._v(" "),a("li",[t._v("1个布尔型：boolean")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("基本数据类型")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("大小（字节）")]),t._v(" "),a("th",[t._v("取值范围")]),t._v(" "),a("th",[t._v("示例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("-2^7—2^7-1")]),t._v(" "),a("td",[t._v("byte a=10;")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("true\\false")]),t._v(" "),a("td",[t._v("boolean b=true;")])]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("'\\u0000'")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("0—2^16-1")]),t._v(" "),a("td",[t._v("char c='c';")])]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("-2^15—2^15-1")]),t._v(" "),a("td",[t._v("short d=10;")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("-2^31—2^31-1")]),t._v(" "),a("td",[t._v("int e=10;")])]),t._v(" "),a("tr",[a("td",[t._v("long")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("-2^63—2^63-1")]),t._v(" "),a("td",[t._v("long f=10L;")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("0.0f")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("-2^31—2^31-1")]),t._v(" "),a("td",[t._v("float g=10.0F;")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("0.0d")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("-2^63—2^63-1")]),t._v(" "),a("td",[t._v("double h=10.0;")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("1KB = 1024Bytes(字节)，1 Bytes = 8 Bit (位)")]),t._v(" "),a("p",[t._v("计算机内存的最小存储单元是字节（byte），一个字节就是一个8位二进制数，即8个Bit 。它的二进制表示范围从"),a("code",[t._v("00000000")]),t._v("~"),a("code",[t._v("11111111")]),t._v("，换算成十进制是0~255，换算成十六进制是"),a("code",[t._v("00")]),t._v("~"),a("code",[t._v("ff")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"int"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[t._v("#")]),t._v(" int")]),t._v(" "),a("p",[t._v("整数型，简称 整型，就是表示整数型的数据，int是最常见的整型数据，也是Java中默认的整型数据。")]),t._v(" "),a("p",[t._v("定义一个int的数据类型：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("=")]),t._v(" 在 Java中表示赋值的意思")])]),t._v(" "),a("p",[t._v("就这样一个 名称 为 "),a("code",[t._v("x")]),t._v(" 的 "),a("code",[t._v("int")]),t._v(" 类型数据就定义了，赋予的值是"),a("code",[t._v("10")]),t._v("，如果不写初始值，就相当于给它指定了默认值。默认值总是"),a("code",[t._v("0")]),t._v("。")]),t._v(" "),a("p",[t._v("既然是变量，会变才行，Java的变量确实会变，特点是可以重新赋值。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("x")]),t._v("被重新赋值后，就变成 "),a("code",[t._v("20")]),t._v(" 了。")]),t._v(" "),a("p",[t._v("因为 "),a("code",[t._v("x")]),t._v(" 已经被赋予了一个int类型的名称，那么"),a("code",[t._v("x")]),t._v("就不能重新定义了：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错，提示变量x已经定义了")]),t._v("\n")])])]),a("p",[t._v("变量还可以赋值给其他变量，称为 "),a("strong",[t._v("值传递")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新建一个 y 变量，赋值为 x，即 100")]),t._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 重新赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印x")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打印y ， y并没有受到x重新赋值的影响")]),t._v("\n")])])]),a("p",[t._v("输出结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("100\n200\n100\n")])])]),a("p",[a("code",[t._v("x")]),t._v(" 、"),a("code",[t._v("y")]),t._v(" 的赋值过程其实是这样的：")]),t._v(" "),a("p",[a("img",{attrs:{src:"F:%5C%E7%AC%94%E8%AE%B0%5CdocsifyLearnJavaToFindAJob%5Cdocs%5Carticles%5CJava%E5%9F%BA%E7%A1%80%5CJava%E5%9F%BA%E7%A1%80%5Cpicture%5Cimage-20210106145934674.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("在Java的底层， x、100 都有属于存储他们的地址，该地址的值会指向存储的值")])]),t._v(" "),a("h3",{attrs:{id:"short-、long、byte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#short-、long、byte"}},[t._v("#")]),t._v(" short 、long、byte")]),t._v(" "),a("p",[t._v("short 是 int 的缩小版，long 是 int 的加长版，byte是 int 的mini版，区别就是范围不同。")]),t._v(" "),a("blockquote",[a("p",[t._v("为了区分整型int，ong 的后缀可以加上"),a("code",[t._v("大写字母L")]),t._v("或者"),a("code",[t._v("小写字母l")]),t._v("，为了和"),a("code",[t._v("数字1")]),t._v(" 区分开，还是用大写字母L规范一点。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后缀 加上大写字母L")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"float、double"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float、double"}},[t._v("#")]),t._v(" float、double")]),t._v(" "),a("p",[t._v("整型表示的是整数，如果要表示小数，可以使用 float、double。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后缀 加上 小写字母f 或者 大写字母F")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0d")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后缀 加上 小写字母d 或者 大写字母D")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Java规定，默认的整型是int，默认的浮点数是double，为了区分到底是"),a("code",[t._v("double")]),t._v("还是"),a("code",[t._v("float")]),t._v("，Java提供后缀 "),a("code",[t._v("d")]),t._v(" 和 "),a("code",[t._v("f")])])]),t._v(" "),a("p",[t._v("所以说，如果写成这样是会报错的：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错，如果不加后缀表示是double的，但前面声明了float 是会报错的")]),t._v("\n")])])]),a("h3",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" boolean")]),t._v(" "),a("p",[t._v("boolean表示 "),a("code",[t._v("真")]),t._v(" 或者 "),a("code",[t._v("假")]),t._v("，只有两个取值："),a("code",[t._v("true")]),t._v(" 、"),a("code",[t._v("false")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean flag =false;")]),t._v("\n")])])]),a("h3",{attrs:{id:"类型转换与强转"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换与强转"}},[t._v("#")]),t._v(" 类型转换与强转")]),t._v(" "),a("p",[t._v("既然都是数据类型，那可不可以相互转换呢？")]),t._v(" "),a("p",[t._v("答案是可以的，但是要注意一个精度丢失问题")]),t._v(" "),a("p",[t._v("不同类型的数据在运算的时候，会自动向高精度的数据类型转换。如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-1253198264.cos.ap-guangzhou.myqcloud.com/image-20201109140944146.png",alt:" "}})]),t._v(" "),a("p",[a("strong",[t._v("自动转换：")])]),t._v(" "),a("p",[t._v("eg：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.0")]),t._v("\n")])])]),a("p",[t._v("如果高精度向低精度转换时，需要"),a("strong",[t._v("强转")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当然 long y = (long) x 也是一样的道理;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),a("p",[t._v("可以在数据前面使用"),a("code",[t._v("(int)")]),t._v("进行强转转换，因为 double是相对高精度，int 是相对低精度，强转就会"),a("strong",[t._v("丢失精度")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("int 只能表示正数，只会保留整数位，并不是四舍五入。")])]),t._v(" "),a("p",[t._v("变量是可以使用 "),a("code",[t._v("修饰符")]),t._v(" 修饰的：")]),t._v(" "),a("p",[t._v("eg：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),a("p",[t._v("引用数据类型，先学完数组和面向对象再详细讲一下。")])])}),[],!1,null,null,null);a.default=e.exports}}]);