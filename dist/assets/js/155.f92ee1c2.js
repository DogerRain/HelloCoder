(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{554:function(v,_,i){"use strict";i.r(_);var l=i(7),a=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"_1-阿里技术一面"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-阿里技术一面"}},[v._v("#")]),v._v(" 1. 阿里技术一面")]),v._v(" "),_("ol",[_("li",[v._v("Java IO流的层次结构?")]),v._v(" "),_("li",[v._v("请说出常用的异常类型?")]),v._v(" "),_("li",[v._v("SKU的全称是什么，SKU与SPU的区别及关系？")]),v._v(" "),_("li",[v._v("FileInputStream在使用完以后，不关闭流，想二次使用可以怎么操作？")]),v._v(" "),_("li",[v._v("设计一个分步式登录系统？")]),v._v(" "),_("li",[v._v("Spring加载过程？")]),v._v(" "),_("li",[v._v("自己有没有写过类似Spring这样的AOP事务？")]),v._v(" "),_("li",[v._v("Java中 try…catch关闭流的语法糖?")]),v._v(" "),_("li",[v._v("如何设计一个秒杀系统？要考虑什么？")]),v._v(" "),_("li",[v._v("有没有遇到进线上GC，出现的症状是什么样的，怎么解决的？")]),v._v(" "),_("li",[v._v("spring的加载过程？")]),v._v(" "),_("li",[v._v("atomic与 volatile的区别？")]),v._v(" "),_("li",[v._v("Thread的 notify给notifyAll的区别?")]),v._v(" "),_("li",[v._v("notifiy是唤醒的那一个线程?")]),v._v(" "),_("li",[v._v("Thread.sleep唤醒以后是否需要重新竞争？")]),v._v(" "),_("li",[v._v("单例有多少种写法?有什么区别?你常用哪一种单例，为什么用这种？")]),v._v(" "),_("li",[v._v("问一个Thread.join相关的问题?")]),v._v(" "),_("li",[v._v("商品相关模块系统怎么设计数据模型？")]),v._v(" "),_("li",[v._v("写一个JAVA死锁的列子?")]),v._v(" "),_("li",[v._v("如何解决死锁?")]),v._v(" "),_("li",[v._v("GC回收算法,及实现原理?")]),v._v(" "),_("li",[v._v("HashMap数据存储结构? key重复了怎么办?是如何解决的?")]),v._v(" "),_("li",[v._v("Spring AOP的实现原理，底层用什么实现的？")])]),v._v(" "),_("h2",{attrs:{id:"_2-阿里技术二面"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-阿里技术二面"}},[v._v("#")]),v._v(" 2.阿里技术二面")]),v._v(" "),_("p",[_("strong",[v._v("电话面试主要考察3块内容：")])]),v._v(" "),_("ol",[_("li",[v._v("Java的相关基础知识，开源框架的原理，JVM，多线程，高并发，中间件等；")]),v._v(" "),_("li",[v._v("之前项目经历，运用的技术，遇到的问题，如何解决，个人有什么收获和成长；")]),v._v(" "),_("li",[v._v("对于技术的热情（平时是否看些技术书籍，逛论坛，写博客，写源代码或程序等）；")])]),v._v(" "),_("h2",{attrs:{id:"_3-java开发技术面试可能问到的问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-java开发技术面试可能问到的问题"}},[v._v("#")]),v._v(" 3.JAVA开发技术面试可能问到的问题")]),v._v(" "),_("ol",[_("li",[v._v("我们主要考核的是网络nio分布式数据库高并发大数据")]),v._v(" "),_("li",[v._v("自定义表格的实现?")]),v._v(" "),_("li",[v._v("动态表单设计?")]),v._v(" "),_("li",[v._v("in-jvm（必考）以及jmm缓存模型如何调优?")]),v._v(" "),_("li",[v._v("常用的RPC框架")]),v._v(" "),_("li",[v._v("nio和io")]),v._v(" "),_("li",[v._v("并发编程，设计模式")]),v._v(" "),_("li",[v._v("地图组件?")]),v._v(" "),_("li",[v._v("hashmap有什么漏洞会导致他变慢？")]),v._v(" "),_("li",[v._v("如何给hashmap的key对象设计他的hashcode？")]),v._v(" "),_("li",[v._v("泛型通配符?在什么情况下使用？")]),v._v(" "),_("li",[v._v("后端方面：redis?分布式框架dubbo(阿里巴巴开源框架)?设计模式?")]),v._v(" "),_("li",[v._v("场景式的问题:秒杀,能列出常见的排队、验证码、库存扣减方式对系统高并发的影响?")]),v._v(" "),_("li",[v._v("能根据实际的需要构建缓存结构提高提高网站的访问速度，熟练使用ehcache、oscache，了解memcache。")]),v._v(" "),_("li",[v._v("了解基于dns轮询的负载均衡，熟练配置web服务器实现负载均衡，程序级能综合使用基于hash或取模等手段实现软负载。")]),v._v(" "),_("li",[v._v("熟悉分布式数据库设计和优化技术，熟练使用mysql、oracle、SqlServer等主流数据库，熟悉hadoop hbase mangodb redis ehcache、oscache memcache。对于大数据量的数据库处理采用分表分库、数据库读写分离、建立缓存等手段优化性能。")]),v._v(" "),_("li",[v._v("熟练掌握lucene，能基于lucene开发大型的搜索引擎，并能用lucene来改善和优化数据库的like查询。")])]),v._v(" "),_("h2",{attrs:{id:"_4-java方向技术考察点-补充"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-java方向技术考察点-补充"}},[v._v("#")]),v._v(" 4.JAVA方向技术考察点(补充)：")]),v._v(" "),_("p",[v._v("1.掌握Java编程语言，包含io/nio/socket/multi threads/collection/concurrency等功能的使用；\n2.熟练掌握jvm（sun hotspot和ibm j9）内存模型、gc垃圾回收调优等技能；\n3.精通JVM,JMM,MVC架构，熟练使用struts2。\n4.熟练使用spring、struts、ibatis构建应用系统。\n5.熟练使用Servlet，jsp，freemark等前端技术。\n6.熟练使用axis搭建基于SOAP协议的WebService服务接口。\n7.熟练使用MAVEN构建项目工程。\n8.熟练使用tomcat等web服务。\n9.熟练使用mysql等关系型数据库，熟悉mysql集群搭建。\n10.熟练使用redis等NOSQL技术。\n11.熟悉tcp、http协议。\n12.熟悉nginx、haproxy等配置。\n13.熟悉javascript、ajax等技术。\n14.熟悉主流分布式文件系统FastDFS等。\n15.熟悉JMS，可熟练使用ActiveMQ。\n16.底层计算机理解内存管理/数据挖掘系统\n17.可靠性和可用性如何理解~\n18.jsp和sever lap对比\n19.数据库到界面，字符集转化\n20.基栈\n21.jvm优化cup高的时候如果分析和监控\n22.java curb突出细节问题\n23.分布式缓存文档如何分流\n24.迁移数据库垂直分割\n25.高并发如何处理前端高并发应用层\n26.LB设计load balance\n27.负载均衡\n28.防网络攻击\n29.数据日志事件监控后通知\n30.数据库事务实现的底层机制\n31.字符串空格输入的网络攻击\n32.Quartz框架的底层原理\n33.数据库同步中不通过数据库引擎直接读日志等方式同步数据")]),v._v(" "),_("h2",{attrs:{id:"_5-项目部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-项目部分"}},[v._v("#")]),v._v(" 5. 项目部分")]),v._v(" "),_("ol",[_("li",[v._v("缓存的使用，如果现在需要实现一个简单的缓存，供搜索框中的ajax异步请求调用，使用什么结构？")]),v._v(" "),_("li",[v._v("内存中的缓存不能一直存在，用什么算法定期将搜索权重较低的entry去掉？")]),v._v(" "),_("li",[v._v("TCP如何保证安全性")]),v._v(" "),_("li",[v._v("红黑树的问题，B+数")]),v._v(" "),_("li",[v._v("JDK1.8中对HashMap的增强，如果一个桶上的节点数量过多，链表+数组的结构就会转换为红黑树。")]),v._v(" "),_("li",[v._v("项目中使用的单机服务器，如果将它部署成分布式服务器？")]),v._v(" "),_("li",[v._v("MySQL的常见优化方式、定为慢查询")]),v._v(" "),_("li",[v._v("手写一个线程安全的单例模式")])]),v._v(" "),_("h2",{attrs:{id:"_6-进阿里必会知识"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-进阿里必会知识"}},[v._v("#")]),v._v(" 6. 进阿里必会知识：")]),v._v(" "),_("ol",[_("li",[v._v("算法和数据结构数组、链表、二叉树、队列、栈的各种操作（性能，场景）")]),v._v(" "),_("li",[v._v("二分查找和各种变种的二分查找")]),v._v(" "),_("li",[v._v("各类排序算法以及复杂度分析（快排、归并、堆）")]),v._v(" "),_("li",[v._v("各类算法题（手写）")]),v._v(" "),_("li",[v._v("理解并可以分析时间和空间复杂度。")]),v._v(" "),_("li",[v._v("动态规划（笔试回回有。。）、贪心。")]),v._v(" "),_("li",[v._v("红黑树、AVL树、Hash树、Tire树、B树、B+树。")]),v._v(" "),_("li",[v._v("图算法（比较少，也就两个最短路径算法理解吧）")]),v._v(" "),_("li",[v._v("计算机网络OSI7层模型（TCP4层）每层的协议")]),v._v(" "),_("li",[v._v("url到页面的过程")]),v._v(" "),_("li",[v._v("HTTPhttp/https 1.0、1.1、2.0")]),v._v(" "),_("li",[v._v("get/post以及幂等性")]),v._v(" "),_("li",[v._v("http协议头相关")]),v._v(" "),_("li",[v._v("网络攻击（CSRF、XSS）")]),v._v(" "),_("li",[v._v("TCP/IP三次握手、四次挥手")]),v._v(" "),_("li",[v._v("拥塞控制（过程、阈值）")]),v._v(" "),_("li",[v._v("流量控制与滑动窗口")]),v._v(" "),_("li",[v._v("TCP与UDP比较")]),v._v(" "),_("li",[v._v("子网划分（一般只有笔试有）")]),v._v(" "),_("li",[v._v("DDos攻击")]),v._v(" "),_("li",[v._v("(B)IO/NIO/AIO三者原理，各个语言是怎么实现的")]),v._v(" "),_("li",[v._v("Netty")]),v._v(" "),_("li",[v._v("Linux内核select poll epoll")]),v._v(" "),_("li",[v._v("数据库（最多的还是mysql，Nosql有redis）索引（包括分类及优化方式，失效条件，底层结构）")]),v._v(" "),_("li",[v._v("sql语法（join，union，子查询，having，group by）")]),v._v(" "),_("li",[v._v("引擎对比（InnoDB，MyISAM）")]),v._v(" "),_("li",[v._v("数据库的锁（行锁，表锁，页级锁，意向锁，读锁，写锁，悲观锁，乐观锁，以及加锁的select sql方式）")]),v._v(" "),_("li",[v._v("隔离级别，依次解决的问题（脏读、不可重复读、幻读）")]),v._v(" "),_("li",[v._v("事务的ACID")]),v._v(" "),_("li",[v._v("B树、B+树")]),v._v(" "),_("li",[v._v("优化（explain，慢查询，show profile）")]),v._v(" "),_("li",[v._v("数据库的范式。")]),v._v(" "),_("li",[v._v("分库分表，主从复制，读写分离。")]),v._v(" "),_("li",[v._v("Nosql相关（redis和memcached区别之类的，如果你熟悉redis，redis还有一堆要问的）")]),v._v(" "),_("li",[v._v("操作系统：进程通信IPC（几种方式），与线程区别")]),v._v(" "),_("li",[v._v("OS的几种策略（页面置换，进程调度等，每个里面有几种算法）")]),v._v(" "),_("li",[v._v("互斥与死锁相关的")]),v._v(" "),_("li",[v._v("linux常用命令（问的时候都会给具体某一个场景）")]),v._v(" "),_("li",[v._v("Linux内核相关（select、poll、epoll）")]),v._v(" "),_("li",[v._v("编程语言（这里只说Java）：把我之后的面经过一遍，Java感觉覆盖的就差不多了，不过下面还是分个类。")]),v._v(" "),_("li",[v._v("Java基础（面向对象、四个特性、重载重写、static和final等等很多东西）")]),v._v(" "),_("li",[v._v("集合（HashMap、ConcurrentHashMap、各种List，最好结合源码看）")]),v._v(" "),_("li",[v._v("并发和多线程（线程池、SYNC和Lock锁机制、线程通信、volatile、ThreadLocal、CyclicBarrier、Atom包、CountDownLatch、AQS、CAS原理等等）")]),v._v(" "),_("li",[v._v("JVM（内存模型、GC垃圾回收，包括分代，GC算法，收集器、类加载和双亲委派、JVM调优，内存泄漏和内存溢出）")]),v._v(" "),_("li",[v._v("IO/NIO相关")]),v._v(" "),_("li",[v._v("反射和代理、异常、Java8相关、序列化")]),v._v(" "),_("li",[v._v("设计模式（常用的，jdk中有的）")]),v._v(" "),_("li",[v._v("Web相关（servlet、cookie/session、Spring）")])])])}),[],!1,null,null,null);_.default=a.exports}}]);