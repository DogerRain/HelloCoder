(window.webpackJsonp=window.webpackJsonp||[]).push([[284],{691:function(e,t,a){"use strict";a.r(t);var n=a(7),s=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("线程池参数的 "),t("code",[e._v("workQueue")]),e._v(" 决定了缓存任务的排队策略，对于不同的业务场景，我们可以使用不同的排队策略。")]),e._v(" "),t("p",[e._v("我们只需要实现"),t("code",[e._v("BlockingQueue")]),e._v(" 这个接口即可。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://images-1253198264.cos.ap-guangzhou.myqcloud.com/20181026185652119.png",alt:"图片出处找不到了"}})]),e._v(" "),t("p",[e._v("JDK7 提供了 7 个阻塞队列。分别是：")]),e._v(" "),t("p",[e._v("ArrayBlockingQueue ：一个由数组结构组成的有界阻塞队列。")]),e._v(" "),t("p",[e._v("LinkedBlockingQueue ：一个由链表结构组成的有界阻塞队列。")]),e._v(" "),t("p",[e._v("PriorityBlockingQueue ：一个支持优先级排序的无界阻塞队列。")]),e._v(" "),t("p",[e._v("DelayQueue：一个使用优先级队列实现的无界阻塞队列。")]),e._v(" "),t("p",[e._v("SynchronousQueue：一个不存储元素的阻塞队列。")]),e._v(" "),t("p",[e._v("LinkedTransferQueue：一个由链表结构组成的无界阻塞队列。")]),e._v(" "),t("p",[e._v("LinkedBlockingDeque：一个由链表结构组成的双向阻塞队列。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/Home/image-20210525232155784.png",alt:""}})]),e._v(" "),t("p",[e._v("介绍一下常用的有三种"),t("code",[e._v("workQueue")])]),e._v(" "),t("h2",{attrs:{id:"_1-synchronousqueue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-synchronousqueue"}},[e._v("#")]),e._v(" 1. SynchronousQueue")]),e._v(" "),t("p",[e._v("SynchronousQueue"),t("strong",[e._v("没有容量")]),e._v("，是无缓冲等待队列，是一个"),t("strong",[e._v("不存储元素的阻塞队列")]),e._v("，会直接将任务交给消费者（即丢给空闲的线程去执行），必须等队列中的添加元素被消费后才能继续添加新的元素，否则会走拒绝策略，所以使用SynchronousQueue阻塞队列一般要求maximumPoolSizes为无界，避免线程拒绝执行操作。")]),e._v(" "),t("p",[e._v("插入元素到队列的线程被阻塞，直到另一个线程从队列中获取了队列中存储的元素。同样，如果线程尝试获取元素并且当前不存在任何元素，则该线程将被阻塞，直到线程将元素插入队列。")]),e._v(" "),t("h2",{attrs:{id:"_2-linkedblockingqueue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-linkedblockingqueue"}},[e._v("#")]),e._v(" 2. LinkedBlockingQueue")]),e._v(" "),t("p",[e._v("LinkedBlockingQueue如果不指定大小，默认值是 "),t("code",[e._v("Integer.MAX_VALUE")]),e._v("，就是说这个队列里面可以放 2^31-1 = 2147483647 个 任务，可以理解这就是"),t("strong",[e._v("无界队列")]),e._v("。")]),e._v(" "),t("p",[e._v("源码在此：")]),e._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("LinkedBlockingQueue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("MAX_VALUE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[e._v("@Native")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("final")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v("   MAX_VALUE "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0x7fffffff")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("所以为了避免队列过大造成机器负载或者内存爆满的情况出现，我们在使用的时候建议手动传一个队列的大小。")]),e._v(" "),t("p",[e._v("与ArrayBlockingQueue不同的是，LinkedBlockingQueue内部分别使用了takeLock 和 putLock 对并发进行控制，也就是说，添加和删除操作并不是互斥操作，可以同时进行，这样也就可以大大提高吞吐量。")]),e._v(" "),t("p",[e._v("与之类似的是 LinkedBlockingDeque。")]),e._v(" "),t("p",[e._v("LinkedBlockingDeque： 使用双向队列实现的双端阻塞队列，双端意味着可以像普通队列一样FIFO(先进先出)，可以像栈一样FILO(先进后出)")]),e._v(" "),t("h2",{attrs:{id:"_3-delayqueue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-delayqueue"}},[e._v("#")]),e._v(" 3. DelayQueue")]),e._v(" "),t("p",[e._v("DelayQueue是一个延迟队列，"),t("strong",[e._v("无界")]),e._v("，队列中每个元素都有过期时间，当从队列获取元素时，只有过期元素才会出队列，而队列头部的元素是过期最快的元素。")]),e._v(" "),t("p",[e._v("能够准确的把握任务的执行时间，通常可以使用在：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("定时任务调度，比如订单过期未支付自动取消")])]),e._v(" "),t("li",[t("p",[e._v("缓存")])])]),e._v(" "),t("p",[e._v("如何使用，可以参考这篇文章："),t("a",{attrs:{href:"https://blog.csdn.net/zhu_tianwei/article/details/53549653",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://blog.csdn.net/zhu_tianwei/article/details/53549653"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"_4-arrayblockingqueue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-arrayblockingqueue"}},[e._v("#")]),e._v(" 4. ArrayBlockingQueue")]),e._v(" "),t("p",[e._v("一个由数组支持的"),t("strong",[e._v("有界阻塞队列")]),e._v("。")]),e._v(" "),t("p",[e._v("此队列按 FIFO（先进先出）原则对元素进行排序。一旦创建了这样的缓存区，就不能再增加其容量。")]),e._v(" "),t("p",[e._v("试图向已满队列中放入元素会导致操作受阻塞；")]),e._v(" "),t("p",[e._v("试图从空队列中提取元素将导致类似阻塞。")]),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结：")]),e._v(" "),t("p",[t("code",[e._v("keepAliveTime")]),e._v("和`maximumPoolSize 和 "),t("strong",[e._v("BlockingQueue")]),e._v(" 的类型均有关系。")]),e._v(" "),t("p",[e._v("如果BlockingQueue是无界的，那么永远不会触发"),t("code",[e._v("maximumPoolSize")]),e._v("，线程会一直往队列里面添加，自然keepAliveTime也就没有了意义。")]),e._v(" "),t("hr"),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("ul",[t("li",[e._v("【细谈Java并发】谈谈LinkedBlockingQueue："),t("a",{attrs:{href:"https://blog.csdn.net/tonywu1992/article/details/83419448",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://blog.csdn.net/tonywu1992/article/details/83419448"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);