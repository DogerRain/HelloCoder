(window.webpackJsonp=window.webpackJsonp||[]).push([[263],{660:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://rain.baimuxym.cn/article/49",target:"_blank",rel:"noopener noreferrer"}},[t._v("RocketMQ的介绍"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/qdhxhz/p/11094624.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RocketMQ(1)-架构原理"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/xuwc/p/9034352.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("rocketmq-常见问题总结(消息的顺序、重复、消费模式)"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("本文是通过以下学习而总结的")]),t._v(" "),s("p",[t._v("《RocketMQ从入门到实践》——丁威")]),t._v(" "),s("p",[t._v("《Apache RocketMQ源码解析》——丁威")]),t._v(" "),s("p",[t._v("B站")])]),t._v(" "),s("h1",{attrs:{id:"_1、rocketmq是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、rocketmq是什么"}},[t._v("#")]),t._v(" 1、RocketMQ是什么")]),t._v(" "),s("p",[t._v("RcoketMQ 是一款低延迟、高可靠、可伸缩、易于使用的"),s("strong",[t._v("消息中间件")]),t._v("。")]),t._v(" "),s("p",[t._v("什么是中间件，可以参考： "),s("RouterLink",{attrs:{to:"/02.PureJavaCoderRoad/08.中间件/MQ/消息队列入门.html"}},[t._v("消息队列入门.md")])],1),t._v(" "),s("h1",{attrs:{id:"_2、rocketmq的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、rocketmq的组成"}},[t._v("#")]),t._v(" 2、RocketMQ的组成")]),t._v(" "),s("blockquote",[s("p",[t._v("RocketMQ官方文档：https://github.com/apache/rocketmq/blob/master/docs/cn/README.md")])]),t._v(" "),s("p",[t._v("RocketMQ主要由 Producer、Broker、Consumer 三部分组成，其中Producer 负责生产消息，Consumer 负责消费消息，Broker 负责存储消息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/DogerRain/image@main/img-202109/image-20211012091010457.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_1、client"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、client"}},[t._v("#")]),t._v(" 1、Client")]),t._v(" "),s("p",[t._v("消息客户端，包括 Producer(消息发送者)和 Consumer(消费消费者)．")]),t._v(" "),s("h4",{attrs:{id:"producer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#producer"}},[t._v("#")]),t._v(" Producer")]),t._v(" "),s("p",[t._v("消息发布的角色，支持分布式集群方式部署。Producer通过MQ的负载均衡模块选择相应的Broker集群队列进行消息投递，投递的过程支持快速失败并且低延迟。")]),t._v(" "),s("h4",{attrs:{id:"consumer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[t._v("#")]),t._v(" Consumer")]),t._v(" "),s("p",[t._v("消息消费的角色，支持分布式集群方式部署。支持以push推，pull拉两种模式对消息进行消费。同时也支持"),s("strong",[t._v("集群方式")]),t._v("和"),s("strong",[t._v("广播方式")]),t._v("的消费，它提供实时消息订阅机制，可以满足大多数用户的需求。")]),t._v(" "),s("p",[t._v("客户端在同一 时间只会连接一台 nameserver，只有在连接出现异常时才会向尝试连接另外一台。客户端每隔 30s 向 Nameserver 发起 topic 的路由信息查询。")]),t._v(" "),s("h3",{attrs:{id:"_2、nameserver"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、nameserver"}},[t._v("#")]),t._v(" 2、Nameserver")]),t._v(" "),s("p",[t._v("topic 的路由注册中心（类似于zookeeper），为客户端根据 Topic 提供路由服务，从而引导客户端向 Broker （支持Broker的动态注册与发现）发送消息。Nameserver 之间的节点不通信。路由信息在 Nameserver 集群中数据一致性采取的最终一致性。 主要有两个功能：")]),t._v(" "),s("ul",[s("li",[t._v("Broker管理，NameServer接受Broker集群的注册信息并且保存下来作为路由信息的基本数据。然后提供心跳检测机制，检查Broker是否还存活")]),t._v(" "),s("li",[t._v("路由信息管理，每个NameServer将保存关于Broker集群的整个路由信息和用于客户端查询的队列信息。然后Producer和Conumser通过NameServer就可以知道整个Broker集群的路由信息，从而进行消息的投递和消费")])]),t._v(" "),s("p",[t._v("NameServer通常也是集群的方式部署，"),s("strong",[t._v("各实例间相互不进行信息通讯")]),t._v("。**Broker是向每一台NameServer注册自己的路由信息，所以每一个NameServer实例上面都保存一份完整的路由信息。**当某个NameServer因某种原因下线了，Broker仍然可以向其它NameServer同步其路由信息，Producer,Consumer仍然可以动态感知Broker的路由的信息。")]),t._v(" "),s("h3",{attrs:{id:"_3、broker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、broker"}},[t._v("#")]),t._v(" 3、Broker")]),t._v(" "),s("p",[t._v("消息存储服务器，Broker主要负责消息的存储、投递和查询以及服务高可用保证，分为两种角色：Master 与 Slave，上图中呈现的就是 2 主 2 从的部署架构。")]),t._v(" "),s("p",[t._v("在 RocketMQ 中，主服务承担读写操作，从服务器作为一个备份，当主服务器存在压力时，从服务器可以承担读服务（消息消费）。所有 Broker，包含 Slave 服务器每隔 30s 会向 Nameserver 发送心跳包，心跳包中会包含存在在 Broker 上所有的 topic 的路由信息。")]),t._v(" "),s("p",[t._v("结合部署架构图，描述集群工作流程：")]),t._v(" "),s("ul",[s("li",[t._v("启动NameServer，NameServer起来后监听端口，等待Broker、Producer、Consumer连上来，相当于一个路由控制中心。")]),t._v(" "),s("li",[t._v("Broker启动，跟所有的NameServer保持长连接，定时发送心跳包。心跳包中包含当前Broker信息(IP+端口等)以及存储所有Topic信息。注册成功后，NameServer集群中就有Topic跟Broker的映射关系。")]),t._v(" "),s("li",[t._v("收发消息前，先创建Topic，创建Topic时需要指定该Topic要存储在哪些Broker上，也可以在发送消息时自动创建Topic。")]),t._v(" "),s("li",[t._v("Producer发送消息，启动时先跟NameServer集群中的其中一台建立长连接，并从NameServer中获取当前发送的Topic存在哪些Broker上，轮询从队列列表中选择一个队列，然后与队列所在的Broker建立长连接从而向Broker发消息。")]),t._v(" "),s("li",[t._v("Consumer跟Producer类似，跟其中一台NameServer建立长连接，获取当前订阅Topic存在哪些Broker上，然后直接跟Broker建立连接通道，开始消费消息。")])]),t._v(" "),s("p",[t._v("借用一张图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"F:%5C%E7%AC%94%E8%AE%B0%5CPureJavaCoderRoad%EF%BC%88Java%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%EF%BC%89%5Cdocs%5Carticles%5CMQ%5Cpicture%5Cimage-20210930103755270.png",alt:""}})]),t._v(" "),s("p",[t._v("RocketMQ消息丢失问题：")]),t._v(" "),s("ul",[s("li",[t._v("https://blog.csdn.net/u014634309/article/details/105086687")]),t._v(" "),s("li",[t._v("https://blog.csdn.net/leeasony/article/details/104857576")])]),t._v(" "),s("h1",{attrs:{id:"_3、基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、基本概念"}},[t._v("#")]),t._v(" 3、基本概念")]),t._v(" "),s("p",[t._v("在熟悉RocketMQ前，我在RocketMQ的官方网站直接复制以下概念过来，便于理解：")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_1-消息模型-message-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-消息模型-message-model"}},[t._v("#")]),t._v(" 1 消息模型（Message Model）")]),t._v(" "),s("p",[t._v("RocketMQ主要由 Producer、Broker、Consumer 三部分组成，其中Producer 负责生产消息，Consumer 负责消费消息，Broker 负责存储消息。Broker 在实际部署过程中对应一台服务器，每个 Broker 可以存储多个Topic的消息，每个Topic的消息也可以分片存储于不同的 Broker。Message Queue 用于存储消息的物理地址，每个Topic中的消息地址存储于多个 Message Queue 中。ConsumerGroup 由多个Consumer 实例构成。")]),t._v(" "),s("h2",{attrs:{id:"_2-消息生产者-producer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息生产者-producer"}},[t._v("#")]),t._v(" 2 消息生产者（Producer）")]),t._v(" "),s("p",[t._v("负责生产消息，一般由业务系统负责生产消息。一个消息生产者会把业务应用系统里产生的消息发送到broker服务器。RocketMQ提供多种发送方式，同步发送、异步发送、顺序发送、单向发送。同步和异步方式均需要Broker返回确认信息，单向发送不需要。")]),t._v(" "),s("h2",{attrs:{id:"_3-消息消费者-consumer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-消息消费者-consumer"}},[t._v("#")]),t._v(" 3 消息消费者（Consumer）")]),t._v(" "),s("p",[t._v("负责消费消息，一般是后台系统负责异步消费。一个消息消费者会从Broker服务器拉取消息、并将其提供给应用程序。从用户应用的角度而言提供了两种消费形式：拉取式消费、推动式消费。")]),t._v(" "),s("h2",{attrs:{id:"_4-主题-topic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-主题-topic"}},[t._v("#")]),t._v(" 4 主题（Topic）")]),t._v(" "),s("p",[t._v("表示一类消息的集合，每个主题包含若干条消息，每条消息只能属于一个主题，是RocketMQ进行消息订阅的基本单位。")]),t._v(" "),s("h2",{attrs:{id:"_5-代理服务器-broker-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-代理服务器-broker-server"}},[t._v("#")]),t._v(" 5 代理服务器（Broker Server）")]),t._v(" "),s("p",[t._v("消息中转角色，负责存储消息、转发消息。代理服务器在RocketMQ系统中负责接收从生产者发送来的消息并存储、同时为消费者的拉取请求作准备。代理服务器也存储消息相关的元数据，包括消费者组、消费进度偏移和主题和队列消息等。")]),t._v(" "),s("h2",{attrs:{id:"_6-名字服务-name-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-名字服务-name-server"}},[t._v("#")]),t._v(" 6 名字服务（Name Server）")]),t._v(" "),s("p",[t._v("名称服务充当路由消息的提供者。生产者或消费者能够通过名字服务查找各主题相应的Broker IP列表。多个Namesrv实例组成集群，但相互独立，没有信息交换。")]),t._v(" "),s("h2",{attrs:{id:"_7-拉取式消费-pull-consumer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-拉取式消费-pull-consumer"}},[t._v("#")]),t._v(" 7 拉取式消费（Pull Consumer）")]),t._v(" "),s("p",[t._v("Consumer消费的一种类型，应用通常主动调用Consumer的拉消息方法从Broker服务器拉消息、主动权由应用控制。一旦获取了批量消息，应用就会启动消费过程。")]),t._v(" "),s("h2",{attrs:{id:"_8-推动式消费-push-consumer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-推动式消费-push-consumer"}},[t._v("#")]),t._v(" 8 推动式消费（Push Consumer）")]),t._v(" "),s("p",[t._v("Consumer消费的一种类型，该模式下Broker收到数据后会主动推送给消费端，该消费模式一般实时性较高。")]),t._v(" "),s("h2",{attrs:{id:"_9-生产者组-producer-group"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-生产者组-producer-group"}},[t._v("#")]),t._v(" 9 生产者组（Producer Group）")]),t._v(" "),s("p",[t._v("同一类Producer的集合，这类Producer发送同一类消息且发送逻辑一致。如果发送的是事务消息且原始生产者在发送之后崩溃，则Broker服务器会联系同一生产者组的其他生产者实例以提交或回溯消费。")]),t._v(" "),s("h2",{attrs:{id:"_10-消费者组-consumer-group"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-消费者组-consumer-group"}},[t._v("#")]),t._v(" 10 消费者组（Consumer Group）")]),t._v(" "),s("p",[t._v("同一类Consumer的集合，这类Consumer通常消费同一类消息且消费逻辑一致。消费者组使得在消息消费方面，实现负载均衡和容错的目标变得非常容易。")]),t._v(" "),s("p",[s("strong",[t._v("要注意的是，消费者组的消费者实例必须订阅完全相同的Topic。")])]),t._v(" "),s("p",[t._v("RocketMQ 支持两种消息模式："),s("code",[t._v("集群消费（Clustering）")]),t._v("和"),s("code",[t._v("广播消费（Broadcasting）")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_11-集群消费-clustering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-集群消费-clustering"}},[t._v("#")]),t._v(" 11 集群消费（Clustering）")]),t._v(" "),s("p",[t._v("集群消费模式下，相同Consumer Group的每个Consumer实例"),s("strong",[t._v("平均分摊消息")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_12-广播消费-broadcasting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-广播消费-broadcasting"}},[t._v("#")]),t._v(" 12 广播消费（Broadcasting）")]),t._v(" "),s("p",[t._v("广播消费模式下，相同Consumer Group的每个Consumer实例都接收"),s("strong",[t._v("全量的消息")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_13-普通顺序消息-normal-ordered-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-普通顺序消息-normal-ordered-message"}},[t._v("#")]),t._v(" 13 普通顺序消息（Normal Ordered Message）")]),t._v(" "),s("p",[t._v("普通顺序消费模式下，消费者通过同一个消息队列（ Topic 分区，称作 Message Queue） 收到的消息是有顺序的，不同消息队列收到的消息则可能是无顺序的。")]),t._v(" "),s("h2",{attrs:{id:"_14-严格顺序消息-strictly-ordered-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-严格顺序消息-strictly-ordered-message"}},[t._v("#")]),t._v(" 14 严格顺序消息（Strictly Ordered Message）")]),t._v(" "),s("p",[t._v("严格顺序消息模式下，消费者收到的所有消息均是有顺序的。")]),t._v(" "),s("h2",{attrs:{id:"_15-消息-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-消息-message"}},[t._v("#")]),t._v(" 15 消息（Message）")]),t._v(" "),s("p",[t._v("消息系统所传输信息的物理载体，生产和消费数据的最小单位，每条消息必须属于一个主题。RocketMQ中每个消息拥有唯一的Message ID，且可以携带具有业务标识的Key。系统提供了通过Message ID和Key查询消息的功能。")]),t._v(" "),s("h2",{attrs:{id:"_16-标签-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-标签-tag"}},[t._v("#")]),t._v(" 16 标签（Tag）")]),t._v(" "),s("p",[t._v("为消息设置的标志，用于同一主题下区分不同类型的消息。来自同一业务单元的消息，可以根据不同业务目的在同一主题下设置不同标签。标签能够有效地保持代码的清晰度和连贯性，并优化RocketMQ提供的查询系统。消费者可以根据Tag实现对不同子主题的不同消费逻辑，实现更好的扩展性。")]),t._v(" "),s("h1",{attrs:{id:"_4、搭建环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、搭建环境"}},[t._v("#")]),t._v(" 4、搭建环境")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/weidong22/article/details/79246726")]),t._v(" "),s("p",[t._v("为什么有序？")]),t._v(" "),s("p",[t._v("如果不指定MessageQueue，默认是轮流发到不同的 MessageQueue上的，所以消费的时候就可能回乱序。")]),t._v(" "),s("p",[t._v("如果指定了，就会把这批消息放在同一个MessageQueue。")]),t._v(" "),s("p",[t._v("https://blog.csdn.net/leexide/article/details/80035470")]),t._v(" "),s("h1",{attrs:{id:"_5、使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、使用"}},[t._v("#")]),t._v(" 5、使用")]),t._v(" "),s("h2",{attrs:{id:"_1、简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、简单使用"}},[t._v("#")]),t._v(" 1、简单使用")]),t._v(" "),s("h3",{attrs:{id:"_5-1、-加入依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、-加入依赖"}},[t._v("#")]),t._v(" 5.1、 加入依赖")]),t._v(" "),s("p",[t._v("maven:")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.rocketmq"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("rocketmq-client"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.3.0"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("gradle")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("compile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("'org.apache.rocketmq:rocketmq-client:4.3.0'")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-2、消息发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、消息发送"}},[t._v("#")]),t._v(" 5.2、消息发送")]),t._v(" "),s("p",[t._v("producer消息的发送分为三种：同步消息、异步消息、单向消息。前两者的消息是可靠的，因为会有ACK应答，而单向消息 只管发送。")]),t._v(" "),s("h4",{attrs:{id:"_1、producer端发送同步消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、producer端发送同步消息"}},[t._v("#")]),t._v(" 1、Producer端发送同步消息")]),t._v(" "),s("p",[t._v("同步消息使用广泛，如短信，一些重要的消息。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SyncProducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化消息生产者Producer")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQProducer")]),t._v(" producer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQProducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"please_rename_unique_group_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置NameServer的地址")]),t._v("\n    \tproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNamesrvAddr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9876"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动Producer实例")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建消息，并指定Topic，Tag和消息体")]),t._v("\n    \t    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TopicTest"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Topic */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TagA"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Tag */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello RocketMQ "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEFAULT_CHARSET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Message body */")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息到一个Broker")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SendResult")]),t._v(" sendResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过sendResult返回消息是否成功送达")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s%n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sendResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不再发送消息，关闭Producer实例。")]),t._v("\n    \tproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_2、发送异步消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、发送异步消息"}},[t._v("#")]),t._v(" 2、发送异步消息")]),t._v(" "),s("p",[t._v("异步消息通常用在对响应时间敏感的业务场景，即发送端不能容忍长时间地等待Broker的响应。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AsyncProducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化消息生产者Producer")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQProducer")]),t._v(" producer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQProducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"please_rename_unique_group_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置NameServer的地址")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNamesrvAddr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9876"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动Producer实例")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRetryTimesWhenSendAsyncFailed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" messageCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据消息数量实例化倒计时计算器")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatch2")]),t._v(" countDownLatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CountDownLatch2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messageCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" messageCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建消息，并指定Topic，Tag和消息体")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TopicTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TagA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OrderID188"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEFAULT_CHARSET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SendCallback接收异步返回结果的回调")]),t._v("\n                producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SendCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onSuccess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SendResult")]),t._v(" sendResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-10d OK %s %n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            sendResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMsgId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \t              "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-10d Exception %s %n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \t              e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待5s")]),t._v("\n\tcountDownLatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SECONDS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不再发送消息，关闭Producer实例。")]),t._v("\n    \tproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3、单向发送消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、单向发送消息"}},[t._v("#")]),t._v(" 3、单向发送消息")]),t._v(" "),s("p",[t._v("这种方式主要用在不特别关心发送结果的场景，例如日志发送。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OnewayProducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化消息生产者Producer")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQProducer")]),t._v(" producer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQProducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"please_rename_unique_group_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置NameServer的地址")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNamesrvAddr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9876"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动Producer实例")]),t._v("\n        producer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建消息，并指定Topic，Tag和消息体")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TopicTest"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Topic */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TagA"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Tag */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello RocketMQ "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemotingHelper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEFAULT_CHARSET"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Message body */")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送单向消息，没有任何返回结果")]),t._v("\n        \tproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendOneway")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不再发送消息，关闭Producer实例。")]),t._v("\n    \tproducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-3-、消息消费"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-、消息消费"}},[t._v("#")]),t._v(" 5.3 、消息消费")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Consumer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MQClientException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化消费者")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQPushConsumer")]),t._v(" consumer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultMQPushConsumer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"please_rename_unique_group_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置NameServer的地址")]),t._v("\n        consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setNamesrvAddr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9876"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 订阅一个或者多个Topic，以及Tag来过滤需要消费的消息")]),t._v("\n        consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TopicTest"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册回调实现类来处理从broker拉取回来的消息")]),t._v("\n        consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerMessageListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageListenerConcurrently")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsumeConcurrentlyStatus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("consumeMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageExt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" msgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsumeConcurrentlyContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s Receive New Messages: %s %n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记该消息已经被成功消费")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConsumeConcurrentlyStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CONSUME_SUCCESS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动消费者实例")]),t._v("\n        consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Consumer Started.%n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2、顺序消息样例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、顺序消息样例"}},[t._v("#")]),t._v(" 2、顺序消息样例")]),t._v(" "),s("p",[t._v("消息有序指的是可以按照消息的发送顺序来消费(FIFO)。RocketMQ可以严格的保证消息有序，可以分为分区有序或者全局有序。")]),t._v(" "),s("p",[t._v("顺序消费的原理解析，在默认的情况下消息发送会采取Round Robin轮询方式把消息发送到不同的queue(分区队列)；而消费消息的时候从多个queue上拉取消息，这种情况发送和消费是不能保证顺序。但是如果控制发送的顺序消息只依次发送到同一个queue中，消费的时候只从这个queue上依次拉取，则就保证了顺序。"),s("strong",[t._v("当发送和消费参与的queue只有一个，则是全局有序；如果多个queue参与，则为分区有序，即相对每个queue，消息都是有序的。")])]),t._v(" "),s("p",[t._v("下面用订单进行分区有序的示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-顺序消息生产"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-顺序消息生产"}},[t._v("#")]),t._v(" 2.1 顺序消息生产")]),t._v(" "),s("h3",{attrs:{id:"_2-2顺序消费消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2顺序消费消息"}},[t._v("#")]),t._v(" 2.2顺序消费消息")]),t._v(" "),s("p",[t._v("代码参考：https://github.com/apache/rocketmq/blob/master/docs/cn/RocketMQ_Example.md#22-%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF")]),t._v(" "),s("h1",{attrs:{id:"_6、故障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、故障"}},[t._v("#")]),t._v(" 6、故障")]),t._v(" "),s("h2",{attrs:{id:"_1、nameserver-挂掉"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、nameserver-挂掉"}},[t._v("#")]),t._v(" 1、nameserver 挂掉")]),t._v(" "),s("ol",[s("li",[t._v("NameServer互相独立，彼此没有通信关系，单台NameServer挂掉，不影响其他NameServer；")]),t._v(" "),s("li",[t._v("broker与所有NameServer进行定时注册，以便告知NameServer自己还活着。"),s("strong",[t._v("Broker每隔30秒向所有NameServer发送心跳")]),t._v("，心跳包含了自身的topic配置信息。NameServer每隔10秒，扫描所有还存活的broker连接，如果某个连接的最后更新时间与当前时间差值超过2分钟，则断开此连接。如果nameserver全挂了，则导致无法确定哪些broker存活，哪些broker宕机，如果broker宕机则导致消息发送失败。")]),t._v(" "),s("li",[t._v("consumer随机与一个NameServer建立长连接，如果该NameServer宕机，则从NameServer列表中查找下一个进行连接。consumer主要从NameServer中根据topic查询broker的地址，查到就会缓存到客户端，并向提供topic服务的master、slave建立长连接，且定时向master、slave发送心跳。如果broker宕机，则NameServer会将其剔除，而consumer端的定时任务每30秒执行一次，会将topic对应的broker地址拉取下来，"),s("strong",[t._v("因此尽管nameserver全部宕机了，consumer依然能消费;")])]),t._v(" "),s("li",[t._v("Producer随机与一个NameServer建立长连接，默认每隔30秒从NameServer获取topic的最新队列情况并缓存，这就表示如果某个broker master宕机，producer最多30秒才能感知，在这个期间，发往该broker master的消息将会失败。Producer会向提供topic服务的master建立长连接，且定时向master发送心跳。"),s("strong",[t._v("Producer与所有的master连接，但不能向slave写入")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_2、broker挂掉"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、broker挂掉"}},[t._v("#")]),t._v(" 2、broker挂掉")]),t._v(" "),s("p",[t._v("broker挂掉需要根据不同的部署方式进行分析：")]),t._v(" "),s("ul",[s("li",[t._v("单个 Master")]),t._v(" "),s("li",[t._v("多 Master（无salve）")]),t._v(" "),s("li",[t._v("多Master多Slave（异步复制）")]),t._v(" "),s("li",[t._v("多Master多Slave模式（同步双写）")])]),t._v(" "),s("h3",{attrs:{id:"_1、单个-master"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、单个-master"}},[t._v("#")]),t._v(" 1、单个 Master")]),t._v(" "),s("p",[t._v("这种挂掉就无了，一旦Broker重启或者宕机时，会导致整个服务不可用，也不推荐使用。")]),t._v(" "),s("h3",{attrs:{id:"_2、多-master-无salve"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、多-master-无salve"}},[t._v("#")]),t._v(" 2、多 Master（无salve）")]),t._v(" "),s("p",[t._v("例如 2 个 Master 或者 3 个 Master。")]),t._v(" "),s("p",[t._v("当单台机器宕机期间，这台机器上"),s("strong",[t._v("未被消费的消息")]),t._v("在机器恢复之前不可订阅，消息实时性会受到受到影响。")]),t._v(" "),s("p",[t._v("假如有两个master：broker-a 和 broker-b ，假如 broker-a 宕机了，生产者和消费者都不能通信，但是消息不会丢失，应用也不会报错，只有 broker-a 重启后，才能完成消费。")]),t._v(" "),s("h3",{attrs:{id:"_3、多master多slave-异步复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、多master多slave-异步复制"}},[t._v("#")]),t._v(" 3、多Master多Slave（异步复制）")]),t._v(" "),s("p",[t._v("每个 Master 配置一个 Slave，有多对Master-Slave，这是一种HA（高可用）模式。")]),t._v(" "),s("p",[t._v("这种模式是对上一种模式 "),s("strong",[t._v("多 Master（无salve）")]),t._v("  的优化，即使磁盘损坏，消息丢失的非常少，且消息实时性不会受影响，因为Master 宕机后，消费者仍然可以从 Slave 消费。（不需要人工干预，master挂了，消费者会自动找到 slave ）")]),t._v(" "),s("p",[t._v("但是Master的宕机，在复制的过程中会导致丢失掉极少量的消息。")]),t._v(" "),s("h3",{attrs:{id:"_4、多master多slave模式-同步双写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、多master多slave模式-同步双写"}},[t._v("#")]),t._v(" 4、多Master多Slave模式（同步双写）")]),t._v(" "),s("p",[t._v("这种模式和上面类似，但在 写入的过程中，先写入master，master再写入slave，主从都写入成功了，再返回给应用。")]),t._v(" "),s("p",[t._v("所以性能比异步复制模式略低，大约低 10%左右，但Master宕机情况下，消息无延迟，服务可用性与数据可用性都非常高。")]),t._v(" "),s("h2",{attrs:{id:"结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("多master（无slave）模式")]),t._v("是所有模式中性能最高的，但是存在当broker宕机，其未被消费的消息在节点恢复之前不可用，消息实时性受到影响；")]),t._v(" "),s("li",[s("strong",[t._v("多master多slave（异步复制）模式")]),t._v(" master节点可读可写，但是slave只能读不能写，在master宕机时，消费者可以从slave中读取消息，消息实时性不会受到影响，但是可能会有消息丢失的问题；")]),t._v(" "),s("li",[s("strong",[t._v("多master多slave（同步双写）模式")]),t._v(" 能保证数据不丢失，但是性能较低；")])]),t._v(" "),s("blockquote",[s("p",[t._v("要保证数据可靠，需采用 同步刷盘 和 同步双写 的方式，但性能会较其他方式低，可通过配置brokerRole和flushDiskType来实现数据可靠性；")])]),t._v(" "),s("h1",{attrs:{id:"_7、实践问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、实践问题"}},[t._v("#")]),t._v(" 7、实践问题")]),t._v(" "),s("h2",{attrs:{id:"_1、生产者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、生产者"}},[t._v("#")]),t._v(" 1、生产者")]),t._v(" "),s("h3",{attrs:{id:"_1-tags的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-tags的使用"}},[t._v("#")]),t._v(" 1 Tags的使用")]),t._v(" "),s("p",[t._v('一个应用尽可能用一个Topic，而消息子类型则可以用tags来标识。tags可以由应用自由设置，只有生产者在发送消息设置了tags，消费方在订阅消息时才可以利用tags通过broker做消息过滤：message.setTags("TagA")。')]),t._v(" "),s("p",[t._v("假如订阅了该toptic，但是tag不符合，这条消息的最终结果还是已经被消费状态（"),s("code",[t._v("CONSUMED_BUT_FILTERED")]),t._v("）。")]),t._v(" "),s("h3",{attrs:{id:"_2-keys的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-keys的使用"}},[t._v("#")]),t._v(" 2 Keys的使用")]),t._v(" "),s("p",[t._v("每个消息在业务层面的唯一标识码要设置到keys字段，方便将来定位消息丢失问题。服务器会为每个消息创建索引（哈希索引），应用可以通过topic、key来查询这条消息内容，以及消息被谁消费。由于是哈希索引，请务必保证key尽可能唯一，这样可以避免潜在的哈希冲突。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 订单Id   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" orderId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20034568923546"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \nmessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orderId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n")])])]),s("h3",{attrs:{id:"_3-消息发送失败处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-消息发送失败处理"}},[t._v("#")]),t._v(" 3 消息发送失败处理")]),t._v(" "),s("p",[t._v("Producer的send方法本身支持内部重试，重试逻辑如下：")]),t._v(" "),s("ul",[s("li",[t._v("至多重试2次。")]),t._v(" "),s("li",[t._v("如果同步模式发送失败，则轮转到下一个Broker，如果异步模式发送失败，则只会在当前Broker进行重试。这个方法的总耗时时间不超过sendMsgTimeout设置的值，默认10s。")]),t._v(" "),s("li",[t._v("如果本身向broker发送消息产生超时异常，就不会再重试。")])]),t._v(" "),s("p",[t._v("以上策略也是在一定程度上保证了消息可以发送成功。如果业务对消息可靠性要求比较高，建议应用增加相应的重试逻辑：比如调用send同步方法发送失败时，则尝试将消息存储到db，然后由后台线程定时重试，确保消息一定到达Broker。")]),t._v(" "),s("h3",{attrs:{id:"_4、日志打印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、日志打印"}},[t._v("#")]),t._v(" 4、日志打印")]),t._v(" "),s("p",[t._v("消息发送务必打印SendResult和key字段，send消息方法只要不抛异常，就代表发送成功。发送成功会有多个状态，在sendResult里定义：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SendStatus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    SEND_OK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    FLUSH_DISK_TIMEOUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    FLUSH_SLAVE_TIMEOUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    SLAVE_NOT_AVAILABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("SEND_OK")])]),t._v(" "),s("p",[t._v("消息发送成功。要注意的是消息发送成功也不意味着它是可靠的。要确保不会丢失任何消息，还应启用同步Master服务器或同步刷盘，即SYNC_MASTER或SYNC_FLUSH。")]),t._v(" "),s("ul",[s("li",[t._v("FLUSH_DISK_TIMEOUT")])]),t._v(" "),s("p",[t._v("消息发送成功但是服务器刷盘超时。此时消息已经进入服务器队列（内存），只有服务器宕机，消息才会丢失。消息存储配置参数中可以设置刷盘方式和同步刷盘时间长度，如果Broker服务器设置了刷盘方式为同步刷盘，即FlushDiskType=SYNC_FLUSH（默认为异步刷盘方式），当Broker服务器未在同步刷盘时间内（默认为5s）完成刷盘，则将返回该状态——刷盘超时。")]),t._v(" "),s("ul",[s("li",[t._v("FLUSH_SLAVE_TIMEOUT")])]),t._v(" "),s("p",[t._v("消息发送成功，但是服务器同步到Slave时超时。此时消息已经进入服务器队列，只有服务器宕机，消息才会丢失。如果Broker服务器的角色是同步Master，即SYNC_MASTER（默认是异步Master即ASYNC_MASTER），并且从Broker服务器未在同步刷盘时间（默认为5秒）内完成与主服务器的同步，则将返回该状态——数据同步到Slave服务器超时。")]),t._v(" "),s("ul",[s("li",[t._v("SLAVE_NOT_AVAILABLE")])]),t._v(" "),s("p",[t._v("消息发送成功，但是此时Slave不可用。如果Broker服务器的角色是同步Master，即SYNC_MASTER（默认是异步Master服务器即ASYNC_MASTER），但没有配置slave Broker服务器，则将返回该状态——无Slave服务器可用。")]),t._v(" "),s("h2",{attrs:{id:"_2、消费者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、消费者"}},[t._v("#")]),t._v(" 2、消费者")]),t._v(" "),s("h3",{attrs:{id:"_2-1-消费过程幂等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-消费过程幂等"}},[t._v("#")]),t._v(" 2.1 消费过程幂等")]),t._v(" "),s("p",[t._v("RocketMQ无法避免消息重复（Exactly-Once），所以如果业务对消费重复非常敏感，务必要在业务层面进行去重处理。可以借助关系数据库进行去重。首先需要确定消息的唯一键，可以是msgId，也可以是消息内容中的唯一标识字段，例如订单Id等。在消费之前判断唯一键是否在关系数据库中存在。如果不存在则插入，并消费，否则跳过。（实际过程要考虑原子性问题，判断是否存在可以尝试插入，如果报主键冲突，则插入失败，直接跳过）")]),t._v(" "),s("p",[t._v("msgId一定是全局唯一标识符，但是实际使用中，可能会存在相同的消息有两个不同msgId的情况（消费者主动重发、因客户端重投机制导致的重复等），这种情况就需要使业务字段进行重复消费。")])])}),[],!1,null,null,null);s.default=n.exports}}]);